GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl: type foo = bar
GOING IN TYPE FOR symbol foo ;)

<BISON> EVALD a type_decl: type meguil = baroda
GOING IN TYPE FOR symbol meguil ;)

<BISON> EVALD a type_decl: type lashid = tamquan
GOING IN TYPE FOR symbol lashid ;)

<BISON> EVALD a type_decl: type b = c
GOING IN TYPE FOR symbol b ;)

<BISON> EVALD a type_decl: type c = b
GOING IN TYPE FOR symbol c ;)

<BISON> EVALD a type_decl: type testarray =  array  of hit
GOING IN TYPE FOR symbol testarray ;)
3. EXPLITERAL (pure num): 2 (12, 16)
 var corona := abcd * zyngert * (now + then - current) 1. SIMPLE VAR (l:12, c:20): elf
3. EXPLITERAL (lvalue): elf
Discovered an EXPLITEral: elf
ADD EXP (l:12, c:18): 2 + elf
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:12, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:12, c:20): elf

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:12, c:16)


<BISON> EVALD a var_decl: var try_hit := 2 + elf
TEST: try_hit
TEST (pos line IS WRONG): 14
1. SIMPLE VAR (l:14, c:15): abcd
3. EXPLITERAL (lvalue): abcd
1. SIMPLE VAR (l:14, c:22): zyngert
3. EXPLITERAL (lvalue): zyngert
1. SIMPLE VAR (l:14, c:33): now
3. EXPLITERAL (lvalue): now
1. SIMPLE VAR (l:14, c:39): then1
3. EXPLITERAL (lvalue): then1
1. SIMPLE VAR (l:14, c:47): current
3. EXPLITERAL (lvalue): current
Discovered an EXPLITEral: current
MINUS EXP (l:14, c:45): then1 - current
In the MINUS EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:14, c:47): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:47): current

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:14, c:39): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:39): then1

ADD EXP (l:14, c:37): now + then1 - current
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:14, c:45): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:39): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:39): then1

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:47): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:47): current

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:14, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:33): now

Discovered an EXPLITEral: ( now + then1 - current )
MULT EXP (l:14, c:30): zyngert * ( now + then1 - current )
In the MULT EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:14, c:37): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:33): now

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:14, c:45): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:39): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:39): then1

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:47): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:47): current

In the MULT EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:14, c:22): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:22): zyngert

MULT EXP (l:14, c:30): abcd * zyngert * ( now + then1 - current )
In the MULT EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:14, c:30): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:14, c:22): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:22): zyngert

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:14, c:37): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:33): now

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:14, c:45): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:39): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:39): then1

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:47): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:47): current

In the MULT EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:14, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:15): abcd


<BISON> EVALD a var_decl: var corona := abcd * zyngert * ( now + then1 - current )
TEST: corona
TEST (pos line IS WRONG): 14
GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl: type intarray =  array  of  int
GOING IN TYPE FOR symbol intarray ;)

<BISON> EVALD a type_decl: type strarray =  array  of  string
GOING IN TYPE FOR symbol strarray ;)
FIELD LIST DETAILS:
symbol t3 for type  string
symbol t2 for type stringlist
symbol t1 for type intlist
symbol hd for type foo
[END]

<BISON> EVALD a type_decl: type rectype = { hd : foo , t1 : intlist , t2 : stringlist , t3 :  string }
GOING IN TYPE FOR symbol rectype ;)
FIELD LIST DETAILS:
symbol t2 for type stringlist2
symbol t1 for type intlist2
symbol hd for type foo2
[END]

<BISON> EVALD a type_decl: type rectype2 = { hd : foo2 , t1 : intlist2 , t2 : stringlist2 }
GOING IN TYPE FOR symbol rectype2 ;)
1. SIMPLE VAR (l:29, c:26): mix
3. EXPLITERAL (lvalue): mix
1. SIMPLE VAR (l:29, c:32): fox
3. EXPLITERAL (lvalue): fox
Discovered an EXPLITEral: fox
EQUAL COMPARE EXP (l:29, c:30): mix = fox
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:29, c:32): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:29, c:32): fox

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:29, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:29, c:26): mix

Discovered an EXPLITEral: ( mix = fox )
1. SIMPLE VAR (l:30, c:21): a
1. SIMPLE VAR (l:30, c:26): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:30, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:30, c:21): a

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:30, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:30, c:26): b

(End of Assign Statement)
1. SIMPLE VAR (l:31, c:21): b
1. SIMPLE VAR (l:31, c:26): b
3. EXPLITERAL (lvalue): b
3. EXPLITERAL (pure num): 1 (31, 30)
Discovered an EXPLITEral: 1
ADD EXP (l:31, c:28): b + 1
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:31, c:30)

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:31, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:31, c:26): b

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:31, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:31, c:21): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:31, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:31, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:31, c:26): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:31, c:30)

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:31, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:31, c:21): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:31, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:31, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:31, c:26): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:31, c:30)

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:30, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:30, c:21): a

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:30, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:30, c:26): b

(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:32, c:21): c
1. SIMPLE VAR (l:32, c:26): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:32, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:32, c:21): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:32, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:32, c:26): b

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:32, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:32, c:21): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:32, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:32, c:26): b

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:31, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:31, c:21): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:31, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:31, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:31, c:26): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:31, c:30)

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:30, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:30, c:21): a

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:30, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:30, c:26): b

(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:33, c:21): d

<BISON> EVALD a func call: fyou()Discovered an EXPLITEral: fyou()
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:33, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:33, c:21): d

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:33, c:26) of function 'fyou'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:33, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:33, c:21): d

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:33, c:26) of function 'fyou'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:32, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:32, c:21): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:32, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:32, c:26): b

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:31, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:31, c:21): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:31, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:31, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:31, c:26): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:31, c:30)

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:30, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:30, c:21): a

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:30, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:30, c:26): b

(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:34, c:21): e
1. SIMPLE VAR (l:34, c:26): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:34, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:34, c:21): e

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:34, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:34, c:26): d

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:34, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:34, c:21): e

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:34, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:34, c:26): d

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:33, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:33, c:21): d

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:33, c:26) of function 'fyou'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:32, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:32, c:21): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:32, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:32, c:26): b

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:31, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:31, c:21): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:31, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:31, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:31, c:26): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:31, c:30)

(End of Assign Statement)
[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:30, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:30, c:21): a

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:30, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:30, c:26): b

(End of Assign Statement)
[end expression list]



<BISON> EVALD an if_then_decl:  if ( mix = fox )  then ( a := b ;
b := b + 1 ;
c := b ;
d := fyou() ;
e := d )
PRNSTAT-EXP: IF-EXP (l:29, c:21)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:29, c:30): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:29, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:29, c:26): mix

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:29, c:32): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:29, c:32): fox

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:33, c:30)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:34, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:34, c:21): e

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:34, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:34, c:26): d

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:33, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:33, c:21): d

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:33, c:26) of function 'fyou'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:32, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:32, c:21): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:32, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:32, c:26): b

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:31, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:31, c:21): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:31, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:31, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:31, c:26): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:31, c:30)

(End of Assign Statement)
[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:30, c:23)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:30, c:21): a

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:30, c:26): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:30, c:26): b

(End of Assign Statement)
[end expression list]


END OF IF-EXP
3. EXPLITERAL (pure num): 67 (40, 23)
1. SIMPLE VAR (l:40, c:28): intarray
3. EXPLITERAL (pure num): 5 (40, 37)
Discovered an EXPLITEral: 5
3. SUBSCRIPT VAR (l:40, c:28): intarray[ 5 ]
PRNSTAT: A SUBSCRIPT VAR (l:40, c28)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:40, c:28): intarray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: INT EXP : 5
PRNSTAT-EXP: INT EXP (l:40, c:37)

3. EXPLITERAL (lvalue): intarray[ 5 ]
Discovered an EXPLITEral: intarray[ 5 ]
ADD EXP (l:40, c:26): 67 + intarray[ 5 ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:40, c:28): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:40, c28)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:40, c:28): intarray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: INT EXP : 5
PRNSTAT-EXP: INT EXP (l:40, c:37)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 67
PRNSTAT-EXP: INT EXP (l:40, c:23)

Discovered an EXPLITEral: ( 67 + intarray[ 5 ] )

<BISON> EVALD a var_decl:  var ihit :  int := ( 67 + intarray[ 5 ] )
3. EXPLITERAL (pure num): 2 (41, 19)
Discovered an EXPLITEral: 2

<BISON> EVALD a var_decl:  var more_hit := 2
TEST: more_hit
TEST (pos line IS WRONG): 42
1. SIMPLE VAR (l:42, c:14): try_mix
3. EXPLITERAL (lvalue): try_mix
Discovered an EXPLITEral: try_mix

<BISON> EVALD a var_decl:  var tmp := try_mix
TEST: tmp
TEST (pos line IS WRONG): 43
1. SIMPLE VAR (l:43, c:20): N
3. EXPLITERAL (lvalue): N
3. EXPLITERAL (pure num): 2 (43, 24)
Discovered an EXPLITEral: 2
ADD EXP (l:43, c:22): N + 2
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:43, c:24)

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:43, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:43, c:20): N

1. SIMPLE VAR (l:43, c:42): tempworkers
3. EXPLITERAL (lvalue): tempworkers
1. SIMPLE VAR (l:43, c:56): backup_workers
3. EXPLITERAL (lvalue): backup_workers
Discovered an EXPLITEral: backup_workers
ADD EXP (l:43, c:54): tempworkers + backup_workers
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:43, c:56): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:43, c:56): backup_workers

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:43, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:43, c:42): tempworkers

Discovered an EXPLITEral: ( tempworkers + backup_workers )
Discovered an ARRAY DEFN: [ N + 2 ] intArray  of ( tempworkers + backup_workers )

<BISON> EVALD a var_decl:  var arr_hit := [ N + 2 ] intArray  of ( tempworkers + backup_workers )
3. EXPLITERAL (pure num): 3 (44, 19)
Discovered an EXPLITEral: 3

<BISON> EVALD a var_decl:  var more_hit := 3
TEST: more_hit
TEST (pos line IS WRONG): 45
3. EXPLITERAL (pure num): 67 (45, 18)
1. SIMPLE VAR (l:45, c:23): intarray
3. EXPLITERAL (pure num): 5 (45, 32)
Discovered an EXPLITEral: 5
3. SUBSCRIPT VAR (l:45, c:23): intarray[ 5 ]
PRNSTAT: A SUBSCRIPT VAR (l:45, c23)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:45, c:23): intarray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: INT EXP : 5
PRNSTAT-EXP: INT EXP (l:45, c:32)

3. EXPLITERAL (lvalue): intarray[ 5 ]
Discovered an EXPLITEral: intarray[ 5 ]
ADD EXP (l:45, c:21): 67 + intarray[ 5 ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:45, c:23): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:45, c23)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:45, c:23): intarray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: INT EXP : 5
PRNSTAT-EXP: INT EXP (l:45, c:32)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 67
PRNSTAT-EXP: INT EXP (l:45, c:18)

Discovered an EXPLITEral: ( 67 + intarray[ 5 ] )

<BISON> EVALD a var_decl:  var i2hit := ( 67 + intarray[ 5 ] )
TEST: i2hit
TEST (pos line IS WRONG): 45
VARLIST (LOOKS FIRST), ADDED TO NULL (i2hit)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:45, c:21): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 67
PRNSTAT-EXP: INT EXP (l:45, c:18)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:45, c:23): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:45, c23)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:45, c:23): intarray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: INT EXP : 5
PRNSTAT-EXP: INT EXP (l:45, c:32)

END-OF-EXP

VARLIST - ALSO ADDED (more_hit)
Expression associated with this var is as follows:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:44, c:19)

END-OF-EXP

VARLIST - ALSO ADDED (arr_hit)
Expression associated with this var is as follows:
PRNSTAT-EXP: ARRAY EXP (l:43, c:18) of type = "intArray"

ArraySize expression is as follows:
PRNSTAT-EXP: BOP EXP (l:43, c:22): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:43, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:43, c:20): N

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:43, c:24)

ArrayInit expression is as follows:
PRNSTAT-EXP: BOP EXP (l:43, c:54): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:43, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:43, c:42): tempworkers

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:43, c:56): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:43, c:56): backup_workers

END-OF-EXP

VARLIST - ALSO ADDED (tmp)
Expression associated with this var is as follows:
PRNSTAT-EXP: VAR EXP (l:42, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:42, c:14): try_mix

END-OF-EXP

VARLIST - ALSO ADDED (more_hit)
Expression associated with this var is as follows:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:41, c:19)

END-OF-EXP

VARLIST - ALSO ADDED (ihit)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:40, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 67
PRNSTAT-EXP: INT EXP (l:40, c:23)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:40, c:28): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:40, c28)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:40, c:28): intarray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: INT EXP : 5
PRNSTAT-EXP: INT EXP (l:40, c:37)

END-OF-EXP

1. SIMPLE VAR (l:47, c:3): t

<BISON> EVALD a func call: treeLeaves()Discovered an EXPLITEral: treeLeaves()
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:47, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:47, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:47, c:8) of function 'treeLeaves'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
1. SIMPLE VAR (l:48, c:3): t
1. SIMPLE VAR (l:48, c:8): rectype
2. FIELD VAR (l:48, c:16): rectype.ele1
2. FIELD VAR (l:48, c:21): rectype.ele1.arry1
1. SIMPLE VAR (l:48, c:28): ele2
2. FIELD VAR (l:48, c:33): ele2.this
3. EXPLITERAL (lvalue): ele2.this
1. SIMPLE VAR (l:48, c:40): ele3
2. FIELD VAR (l:48, c:45): ele3.that
3. EXPLITERAL (lvalue): ele3.that
Discovered an EXPLITEral: ele3.that
ADD EXP (l:48, c:38): ele2.this + ele3.that
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

3. SUBSCRIPT VAR (l:48, c:45): rectype.ele1.arry1[ ele2.this + ele3.that ]
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

3. EXPLITERAL (lvalue): rectype.ele1.arry1[ ele2.this + ele3.that ]
Discovered an EXPLITEral: rectype.ele1.arry1[ ele2.this + ele3.that ]
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:48, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:48, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:48, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:48, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:47, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:47, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:47, c:8) of function 'treeLeaves'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:49, c:3): t1
1. SIMPLE VAR (l:49, c:9): rectypo1
2. FIELD VAR (l:49, c:18): rectypo1.ele1
2. FIELD VAR (l:49, c:23): rectypo1.ele1.arry1
1. SIMPLE VAR (l:49, c:30): ele2
2. FIELD VAR (l:49, c:35): ele2.this
3. EXPLITERAL (lvalue): ele2.this
1. SIMPLE VAR (l:49, c:42): ele3
2. FIELD VAR (l:49, c:47): ele3.that
3. EXPLITERAL (lvalue): ele3.that
Discovered an EXPLITEral: ele3.that
ADD EXP (l:49, c:40): ele2.this + ele3.that
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

3. SUBSCRIPT VAR (l:49, c:47): rectypo1.ele1.arry1[ ele2.this + ele3.that ]
PRNSTAT: A SUBSCRIPT VAR (l:49, c47)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:49, c:23): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:49, c:18): rectypo1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:49, c:40): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

2. FIELD VAR (l:49, c:54): rectypo1.ele1.arry1[ ele2.this + ele3.that ].ele5
2. FIELD VAR (l:49, c:59): rectypo1.ele1.arry1[ ele2.this + ele3.that ].ele5.ele6
3. EXPLITERAL (lvalue): rectypo1.ele1.arry1[ ele2.this + ele3.that ].ele5.ele6
Discovered an EXPLITEral: rectypo1.ele1.arry1[ ele2.this + ele3.that ].ele5.ele6
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:49, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:49, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:49, c:59): (details below)
PRNSTAT: FIELD VAR (l:49, c:59): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:49, c:54): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:49, c47)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:49, c:23): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:49, c:18): rectypo1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:49, c:40): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:49, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:49, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:49, c:59): (details below)
PRNSTAT: FIELD VAR (l:49, c:59): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:49, c:54): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:49, c47)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:49, c:23): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:49, c:18): rectypo1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:49, c:40): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:48, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:48, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:47, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:47, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:47, c:8) of function 'treeLeaves'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:50, c:3): t1
1. SIMPLE VAR (l:50, c:9): rectypo2
2. FIELD VAR (l:50, c:18): rectypo2.ele1
3. EXPLITERAL (pure num): 1 (50, 24)
3. EXPLITERAL (pure num): 3 (50, 28)
Discovered an EXPLITEral: 3
ADD EXP (l:50, c:26): 1 + 3
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

3. SUBSCRIPT VAR (l:50, c:18): rectypo2.ele1[ 1 + 3 ]
PRNSTAT: A SUBSCRIPT VAR (l:50, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:50, c:18): rectypo2 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

2. FIELD VAR (l:50, c:32): rectypo2.ele1[ 1 + 3 ].arry1
1. SIMPLE VAR (l:50, c:39): ele2
2. FIELD VAR (l:50, c:44): ele2.this
3. EXPLITERAL (lvalue): ele2.this
1. SIMPLE VAR (l:50, c:51): ele3
2. FIELD VAR (l:50, c:56): ele3.that
3. EXPLITERAL (lvalue): ele3.that
Discovered an EXPLITEral: ele3.that
ADD EXP (l:50, c:49): ele2.this + ele3.that
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:50, c:56): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:56): ele3 and that

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:50, c:44): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:44): ele2 and this

3. SUBSCRIPT VAR (l:50, c:56): rectypo2.ele1[ 1 + 3 ].arry1[ ele2.this + ele3.that ]
PRNSTAT: A SUBSCRIPT VAR (l:50, c56)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:50, c:32): [SEE-NEXT] and arry1
PRNSTAT: A SUBSCRIPT VAR (l:50, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:50, c:18): rectypo2 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:49): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:44): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:44): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:56): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:56): ele3 and that

2. FIELD VAR (l:50, c:63): rectypo2.ele1[ 1 + 3 ].arry1[ ele2.this + ele3.that ].ele5
2. FIELD VAR (l:50, c:68): rectypo2.ele1[ 1 + 3 ].arry1[ ele2.this + ele3.that ].ele5.ele6
3. EXPLITERAL (lvalue): rectypo2.ele1[ 1 + 3 ].arry1[ ele2.this + ele3.that ].ele5.ele6
Discovered an EXPLITEral: rectypo2.ele1[ 1 + 3 ].arry1[ ele2.this + ele3.that ].ele5.ele6
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:50, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:50, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:50, c:68): (details below)
PRNSTAT: FIELD VAR (l:50, c:68): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:50, c:63): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:50, c56)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:50, c:32): [SEE-NEXT] and arry1
PRNSTAT: A SUBSCRIPT VAR (l:50, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:50, c:18): rectypo2 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:49): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:44): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:44): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:56): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:56): ele3 and that

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:50, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:50, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:50, c:68): (details below)
PRNSTAT: FIELD VAR (l:50, c:68): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:50, c:63): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:50, c56)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:50, c:32): [SEE-NEXT] and arry1
PRNSTAT: A SUBSCRIPT VAR (l:50, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:50, c:18): rectypo2 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:49): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:44): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:44): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:56): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:56): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:49, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:49, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:49, c:59): (details below)
PRNSTAT: FIELD VAR (l:49, c:59): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:49, c:54): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:49, c47)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:49, c:23): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:49, c:18): rectypo1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:49, c:40): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:48, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:48, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:47, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:47, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:47, c:8) of function 'treeLeaves'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:51, c:3): t2
1. SIMPLE VAR (l:51, c:9): rectypo3
2. FIELD VAR (l:51, c:18): rectypo3.ele1
3. EXPLITERAL (pure num): 1 (51, 24)
3. EXPLITERAL (pure num): 3 (51, 28)
Discovered an EXPLITEral: 3
ADD EXP (l:51, c:26): 1 + 3
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:51, c:28)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:51, c:24)

3. SUBSCRIPT VAR (l:51, c:18): rectypo3.ele1[ 1 + 3 ]
PRNSTAT: A SUBSCRIPT VAR (l:51, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:51, c:18): rectypo3 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:51, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:51, c:28)

1. SIMPLE VAR (l:51, c:33): ele2
2. FIELD VAR (l:51, c:38): ele2.this
3. EXPLITERAL (lvalue): ele2.this
1. SIMPLE VAR (l:51, c:45): ele3
2. FIELD VAR (l:51, c:50): ele3.that
3. EXPLITERAL (lvalue): ele3.that
Discovered an EXPLITEral: ele3.that
ADD EXP (l:51, c:43): ele2.this + ele3.that
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:51, c:50): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:50): ele3 and that

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:51, c:38): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:38): ele2 and this

3. SUBSCRIPT VAR (l:51, c:50): rectypo3.ele1[ 1 + 3 ][ ele2.this + ele3.that ]
PRNSTAT: A SUBSCRIPT VAR (l:51, c50)
In subscript-var, the varname is as follows: 
PRNSTAT: A SUBSCRIPT VAR (l:51, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:51, c:18): rectypo3 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:51, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:51, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:43): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:38): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:38): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:50): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:50): ele3 and that

2. FIELD VAR (l:51, c:57): rectypo3.ele1[ 1 + 3 ][ ele2.this + ele3.that ].ele5
2. FIELD VAR (l:51, c:62): rectypo3.ele1[ 1 + 3 ][ ele2.this + ele3.that ].ele5.ele6
3. EXPLITERAL (lvalue): rectypo3.ele1[ 1 + 3 ][ ele2.this + ele3.that ].ele5.ele6
Discovered an EXPLITEral: rectypo3.ele1[ 1 + 3 ][ ele2.this + ele3.that ].ele5.ele6
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:51, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:51, c:3): t2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:51, c:62): (details below)
PRNSTAT: FIELD VAR (l:51, c:62): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:51, c:57): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:51, c50)
In subscript-var, the varname is as follows: 
PRNSTAT: A SUBSCRIPT VAR (l:51, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:51, c:18): rectypo3 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:51, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:51, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:43): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:38): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:38): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:50): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:50): ele3 and that

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:51, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:51, c:3): t2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:51, c:62): (details below)
PRNSTAT: FIELD VAR (l:51, c:62): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:51, c:57): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:51, c50)
In subscript-var, the varname is as follows: 
PRNSTAT: A SUBSCRIPT VAR (l:51, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:51, c:18): rectypo3 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:51, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:51, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:43): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:38): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:38): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:50): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:50): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:50, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:50, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:50, c:68): (details below)
PRNSTAT: FIELD VAR (l:50, c:68): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:50, c:63): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:50, c56)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:50, c:32): [SEE-NEXT] and arry1
PRNSTAT: A SUBSCRIPT VAR (l:50, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:50, c:18): rectypo2 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:49): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:44): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:44): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:56): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:56): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:49, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:49, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:49, c:59): (details below)
PRNSTAT: FIELD VAR (l:49, c:59): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:49, c:54): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:49, c47)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:49, c:23): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:49, c:18): rectypo1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:49, c:40): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:48, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:48, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:47, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:47, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:47, c:8) of function 'treeLeaves'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:52, c:3): more_hit
3. EXPLITERAL (pure num): 1 (52, 15)
Discovered an EXPLITEral: 1
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:52, c:12)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:52, c:3): more_hit

RHS of Assign Statement:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:52, c:15)

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:52, c:12)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:52, c:3): more_hit

RHS of Assign Statement:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:52, c:15)

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:51, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:51, c:3): t2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:51, c:62): (details below)
PRNSTAT: FIELD VAR (l:51, c:62): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:51, c:57): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:51, c50)
In subscript-var, the varname is as follows: 
PRNSTAT: A SUBSCRIPT VAR (l:51, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:51, c:18): rectypo3 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:51, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:51, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:43): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:38): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:38): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:50): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:50): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:50, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:50, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:50, c:68): (details below)
PRNSTAT: FIELD VAR (l:50, c:68): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:50, c:63): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:50, c56)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:50, c:32): [SEE-NEXT] and arry1
PRNSTAT: A SUBSCRIPT VAR (l:50, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:50, c:18): rectypo2 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:49): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:44): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:44): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:56): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:56): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:49, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:49, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:49, c:59): (details below)
PRNSTAT: FIELD VAR (l:49, c:59): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:49, c:54): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:49, c47)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:49, c:23): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:49, c:18): rectypo1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:49, c:40): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:48, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:48, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 6 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:47, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:47, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:47, c:8) of function 'treeLeaves'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:53, c:3): double_hit
3. EXPLITERAL (pure num): 1 (53, 17)
3. EXPLITERAL (pure num): 2 (53, 21)
3. EXPLITERAL (pure num): 3 (53, 25)
3. EXPLITERAL (pure num): 4 (53, 29)
1. SIMPLE VAR (l:53, c:33): elope
3. EXPLITERAL (lvalue): elope
1. SIMPLE VAR (l:53, c:41): with
3. EXPLITERAL (lvalue): with
1. SIMPLE VAR (l:53, c:48): me
3. EXPLITERAL (lvalue): me
Discovered an EXPLITEral: me
MINUS EXP (l:53, c:46): with - me
In the MINUS EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

MULT EXP (l:53, c:39): elope * with - me
In the MULT EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:53, c:46): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

In the MULT EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:53, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:33): elope

DIV EXP (l:53, c:31): 4 / elope * with - me
In the DIV EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:53, c:39): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:53, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:33): elope

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:53, c:46): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

In the DIV EXP, exp_right:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:53, c:29)

ADD EXP (l:53, c:27): 3 + 4 / elope * with - me
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:53, c:31): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:53, c:29)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:53, c:39): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:53, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:33): elope

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:53, c:46): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:53, c:25)

ADD EXP (l:53, c:27): 2 + 3 + 4 / elope * with - me
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:53, c:25)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:31): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:53, c:29)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:53, c:39): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:53, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:33): elope

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:53, c:46): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:53, c:21)

ADD EXP (l:53, c:27): 1 + 2 + 3 + 4 / elope * with - me
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:53, c:21)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:53, c:25)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:31): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:53, c:29)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:53, c:39): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:53, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:33): elope

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:53, c:46): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:53, c:17)

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:53, c:14)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:53, c:3): double_hit

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:53, c:17)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:53, c:21)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:53, c:25)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:31): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:53, c:29)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:53, c:39): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:53, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:33): elope

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:53, c:46): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:53, c:14)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:53, c:3): double_hit

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:53, c:17)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:53, c:21)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:27): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:53, c:25)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:53, c:31): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:53, c:29)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:53, c:39): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:53, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:33): elope

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:53, c:46): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:41): with

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:53, c:48): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:53, c:48): me

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:52, c:12)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:52, c:3): more_hit

RHS of Assign Statement:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:52, c:15)

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:51, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:51, c:3): t2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:51, c:62): (details below)
PRNSTAT: FIELD VAR (l:51, c:62): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:51, c:57): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:51, c50)
In subscript-var, the varname is as follows: 
PRNSTAT: A SUBSCRIPT VAR (l:51, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:51, c:18): rectypo3 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:51, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:51, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:51, c:43): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:38): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:38): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:51, c:50): (details below)
PRNSTAT-VAR: FIELD VAR (l:51, c:50): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:50, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:50, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:50, c:68): (details below)
PRNSTAT: FIELD VAR (l:50, c:68): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:50, c:63): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:50, c56)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:50, c:32): [SEE-NEXT] and arry1
PRNSTAT: A SUBSCRIPT VAR (l:50, c18)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: FIELD VAR (l:50, c:18): rectypo2 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:26): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:50, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:50, c:28)

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:50, c:49): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:44): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:44): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:50, c:56): (details below)
PRNSTAT-VAR: FIELD VAR (l:50, c:56): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:49, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:49, c:3): t1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:49, c:59): (details below)
PRNSTAT: FIELD VAR (l:49, c:59): [SEE-NEXT] and ele6
PRNSTAT: FIELD VAR (l:49, c:54): [SEE-NEXT] and ele5
PRNSTAT: A SUBSCRIPT VAR (l:49, c47)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:49, c:23): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:49, c:18): rectypo1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:49, c:40): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:35): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:35): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:49, c:47): (details below)
PRNSTAT-VAR: FIELD VAR (l:49, c:47): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 6 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:48, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:48, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:48, c45)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:48, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:48, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:48, c:38): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:33): ele2 and this

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:48, c:45): (details below)
PRNSTAT-VAR: FIELD VAR (l:48, c:45): ele3 and that

(End of Assign Statement)
[EXPLIST] expression no. 7 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:47, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:47, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: FUNC-CALL (l:47, c:8) of function 'treeLeaves'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:55, c:8): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:55, c:12): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
EQUAL COMPARE EXP (l:55, c:10): a = b
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:55, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:55, c:12): b

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:55, c:8): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:55, c:8): a

Discovered an EXPLITEral: ( a = b )
1. SIMPLE VAR (l:55, c:22): c
1. SIMPLE VAR (l:55, c:27): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:55, c:24)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:55, c:22): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:55, c:27): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:55, c:27): d

(End of Assign Statement)

<BISON> EVALD an if_then_decl:  if ( a = b )  then ( c := d )
PRNSTAT-EXP: IF-EXP (l:55, c:2)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:55, c:10): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:55, c:8): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:55, c:8): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:55, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:55, c:12): b

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:55, c:21)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:55, c:24)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:55, c:22): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:55, c:27): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:55, c:27): d

(End of Assign Statement)
[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:57, c:17): a
2. FIELD VAR (l:57, c:19): a.first
3. EXPLITERAL (lvalue): a.first
Discovered an EXPLITEral: a.first

<BISON> EVALD a Rec Creation Parm: first = a.first
1. SIMPLE VAR (l:57, c:39): a
2. FIELD VAR (l:57, c:41): a.rest
3. EXPLITERAL (lvalue): a.rest
Discovered an EXPLITEral: a.rest
1. SIMPLE VAR (l:57, c:47): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b

<BISON> EVALD a func call: merge(a.rest , b)
Discovered an EXPLITEral: merge(a.rest , b)

<BISON> EVALD a Rec Creation Parm: first = a.first , rest = merge(a.rest , b)

<BISON> EVALD a Rec Creation Statement: list { first = a.first , rest = merge(a.rest , b) }
1. SIMPLE VAR (l:59, c:8): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:59, c:12): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
EQUAL COMPARE EXP (l:59, c:10): a = b
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:59, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:12): b

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:59, c:8): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:8): a

Discovered an EXPLITEral: ( a = b )
1. SIMPLE VAR (l:59, c:22): c1
1. SIMPLE VAR (l:59, c:28): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:59, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:59, c:22): c1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:59, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:28): d

(End of Assign Statement)
1. SIMPLE VAR (l:60, c:22): c2
1. SIMPLE VAR (l:60, c:28): d1
3. EXPLITERAL (lvalue): d1
Discovered an EXPLITEral: d1
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:60, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:60, c:22): c2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:60, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:60, c:28): d1

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:60, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:60, c:22): c2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:60, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:60, c:28): d1

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:59, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:59, c:22): c1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:59, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:28): d

(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:61, c:22): c3
1. SIMPLE VAR (l:61, c:28): d2
3. EXPLITERAL (lvalue): d2
Discovered an EXPLITEral: d2
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:61, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:61, c:22): c3

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:61, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:61, c:28): d2

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:61, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:61, c:22): c3

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:61, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:61, c:28): d2

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:60, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:60, c:22): c2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:60, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:60, c:28): d1

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:59, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:59, c:22): c1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:59, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:28): d

(End of Assign Statement)
[end expression list]



<BISON> EVALD a func call: f()
<BISON> EVALD an if_then_decl:  if ( a = b )  then ( c1 := d ;
c2 := d1 ;
c3 := d2 ;
f() )
PRNSTAT-EXP: IF-EXP (l:59, c:2)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:59, c:10): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:59, c:8): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:8): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:59, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:12): b

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:62, c:23)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:62, c:22) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:61, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:61, c:22): c3

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:61, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:61, c:28): d2

(End of Assign Statement)
[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:60, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:60, c:22): c2

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:60, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:60, c:28): d1

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:59, c:25)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:59, c:22): c1

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:59, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:59, c:28): d

(End of Assign Statement)
[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:65, c:11): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:65, c:15): b
3. EXPLITERAL (lvalue): b
3. EXPLITERAL (pure num): 50 (65, 19)
Discovered an EXPLITEral: 50
LT-COMP EXP (l:65, c:17): b < 50
In the LT-COMP EXP, exp_left:
PRNSTAT-EXP: INT EXP : 50
PRNSTAT-EXP: INT EXP (l:65, c:19)

In the LT-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:65, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:65, c:15): b

ADD EXP (l:65, c:13): a + b < 50
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:65, c:17): OpType=LESS THAN

 Printing about Left SubExp of LESS THAN now:
PRNSTAT-EXP: VAR EXP (l:65, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:65, c:15): b

 Printing about Right SubExp of LESS THAN now:
PRNSTAT-EXP: INT EXP : 50
PRNSTAT-EXP: INT EXP (l:65, c:19)

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:65, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:65, c:11): a

Discovered an EXPLITEral: ( a + b < 50 )
1. SIMPLE VAR (l:67, c:4): a
1. SIMPLE VAR (l:67, c:9): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:67, c:13): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
ADD EXP (l:67, c:11): a + b
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:67, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:67, c:13): b

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:67, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:67, c:9): a

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:67, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:67, c:4): a

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:67, c:11): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:67, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:67, c:9): a

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:67, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:67, c:13): b

(End of Assign Statement)
1. SIMPLE VAR (l:68, c:4): b
1. SIMPLE VAR (l:68, c:9): b
3. EXPLITERAL (lvalue): b
1. SIMPLE VAR (l:68, c:13): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a
MINUS EXP (l:68, c:11): b - a
In the MINUS EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:68, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:68, c:13): a

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:68, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:68, c:9): b

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:68, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:68, c:4): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:68, c:11): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:68, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:68, c:9): b

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:68, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:68, c:13): a

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:68, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:68, c:4): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:68, c:11): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:68, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:68, c:9): b

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:68, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:68, c:13): a

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:67, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:67, c:4): a

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:67, c:11): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:67, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:67, c:9): a

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:67, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:67, c:13): b

(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:71, c:7): b
3. EXPLITERAL (lvalue): b
1. SIMPLE VAR (l:71, c:11): c
3. EXPLITERAL (lvalue): c
Discovered an EXPLITEral: c
EQUAL COMPARE EXP (l:71, c:9): b = c
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:71, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:71, c:11): c

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:71, c:7): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:71, c:7): b

Discovered an EXPLITEral: ( b = c )
1. SIMPLE VAR (l:72, c:3): mme
1. SIMPLE VAR (l:72, c:10): you
3. EXPLITERAL (lvalue): you
Discovered an EXPLITEral: you
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:72, c:7)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:72, c:3): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:72, c:10): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:72, c:10): you

(End of Assign Statement)

<BISON> EVALD an if_then_decl:  if ( b = c )  then ( mme := you )
PRNSTAT-EXP: IF-EXP (l:71, c:2)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:71, c:9): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:71, c:7): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:71, c:7): b

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:71, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:71, c:11): c

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:71, c:20)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:72, c:7)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:72, c:3): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:72, c:10): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:72, c:10): you

(End of Assign Statement)
[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:75, c:7): b
3. EXPLITERAL (lvalue): b
1. SIMPLE VAR (l:75, c:11): c
3. EXPLITERAL (lvalue): c
Discovered an EXPLITEral: c
EQUAL COMPARE EXP (l:75, c:9): b = c
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:75, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:75, c:11): c

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:75, c:7): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:75, c:7): b

Discovered an EXPLITEral: ( b = c )
1. SIMPLE VAR (l:77, c:3): mme
1. SIMPLE VAR (l:77, c:10): you
3. EXPLITERAL (lvalue): you
Discovered an EXPLITEral: you
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:77, c:7)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:77, c:3): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:77, c:10): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:77, c:10): you

(End of Assign Statement)

<BISON> EVALD an if_then_decl:  if ( b = c )  then ( mme := you )
PRNSTAT-EXP: IF-EXP (l:75, c:2)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:75, c:9): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:75, c:7): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:75, c:7): b

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:75, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:75, c:11): c

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:76, c:3)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:77, c:7)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:77, c:3): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:77, c:10): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:77, c:10): you

(End of Assign Statement)
[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:80, c:7): b
3. EXPLITERAL (lvalue): b
1. SIMPLE VAR (l:80, c:11): c
3. EXPLITERAL (lvalue): c
Discovered an EXPLITEral: c
EQUAL COMPARE EXP (l:80, c:9): b = c
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:80, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:80, c:11): c

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:80, c:7): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:80, c:7): b

Discovered an EXPLITEral: ( b = c )
1. SIMPLE VAR (l:82, c:14): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:82, c:18): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
EQUAL COMPARE EXP (l:82, c:16): a = b
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:82, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:18): b

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:82, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:14): a

Discovered an EXPLITEral: ( a = b )
1. SIMPLE VAR (l:82, c:28): c
1. SIMPLE VAR (l:82, c:33): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:82, c:30)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:82, c:28): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:82, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:33): d

(End of Assign Statement)

<BISON> EVALD an if_then_decl:  if ( a = b )  then ( c := d )
PRNSTAT-EXP: IF-EXP (l:82, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:82, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:82, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:82, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:18): b

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:82, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:82, c:30)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:82, c:28): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:82, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:33): d

(End of Assign Statement)
[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:83, c:4): mme
1. SIMPLE VAR (l:83, c:11): you
3. EXPLITERAL (lvalue): you
Discovered an EXPLITEral: you
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:83, c:8)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:83, c:4): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:83, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:83, c:11): you

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:83, c:8)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:83, c:4): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:83, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:83, c:11): you

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: IF-EXP (l:82, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:82, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:82, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:82, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:18): b

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:82, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:82, c:30)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:82, c:28): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:82, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:33): d

(End of Assign Statement)
[end expression list]


END OF IF-EXP
[end expression list]



<BISON> EVALD an if_then_decl:  if ( b = c )  then (  if ( a = b )  then ( c := d ) ;
mme := you )
PRNSTAT-EXP: IF-EXP (l:82, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:80, c:9): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:80, c:7): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:80, c:7): b

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:80, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:80, c:11): c

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:82, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:83, c:8)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:83, c:4): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:83, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:83, c:11): you

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: IF-EXP (l:82, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:82, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:82, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:82, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:18): b

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:82, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:82, c:30)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:82, c:28): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:82, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:82, c:33): d

(End of Assign Statement)
[end expression list]


END OF IF-EXP
[end expression list]


END OF IF-EXP

<BISON> EVALD a LET_decl (occurance 39,2):  let
[Type]
 var ihit :  int := ( 67 + intarray[ 5 ] )
 in
[Body]
( t := treeLeaves() ;
t := rectype.ele1.arry1[ ele2.this + ele3.that ] ;
t1 := rectypo1.ele1.arry1[ ele2.this + ele3.that ].ele5.ele6 ;
t1 := rectypo2.ele1[ 1 + 3 ].arry1[ ele2.this + ele3.that ].ele5.ele6 ;
t2 := rectypo3.ele1[ 1 + 3 ][ ele2.this + ele3.that ].ele5.ele6 ;
more_hit := 1 ;
double_hit := 1 + 2 + 3 + 4 / elope * with - me ;
 if ( a = b )  then ( c := d ) ;
list { first = a.first , rest = merge(a.rest , b) } ;
 if ( a = b )  then ( c1 := d ;
c2 := d1 ;
c3 := d2 ;
f() ) ;
 while ( a + b < 50 )  do ( a := a + b ;
b := b - a ) ;
 if ( b = c )  then ( mme := you ) ;
 if ( b = c )  then ( mme := you ) ;
 if ( b = c )  then (  if ( a = b )  then ( c := d ) ;
mme := you ) )
 end
[END]


1. SIMPLE VAR (l:88, c:16): i2hit
3. EXPLITERAL (lvalue): i2hit
Discovered an EXPLITEral: i2hit

<BISON> EVALD a var_decl:  var i3hit := i2hit
TEST: i3hit
TEST (pos line IS WRONG): 88
VARLIST (LOOKS FIRST), ADDED TO NULL (i3hit)
Expression associated with this var is as follows:
PRNSTAT-EXP: VAR EXP (l:88, c:16): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:88, c:16): i2hit

END-OF-EXP

1. SIMPLE VAR (l:89, c:5): i3hit
1. SIMPLE VAR (l:89, c:14): more_hit
3. EXPLITERAL (lvalue): more_hit
1. SIMPLE VAR (l:89, c:25): i2hit
3. EXPLITERAL (lvalue): i2hit
Discovered an EXPLITEral: i2hit
ADD EXP (l:89, c:23): more_hit + i2hit
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:89, c:25): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:89, c:25): i2hit

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:89, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:89, c:14): more_hit

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:89, c:11)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:89, c:5): i3hit

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:89, c:23): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:89, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:89, c:14): more_hit

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:89, c:25): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:89, c:25): i2hit

(End of Assign Statement)

<BISON> EVALD a LET_decl (occurance 87,2):  let
[Type]
 var i3hit := i2hit
 in
[Body]
( i3hit := more_hit + i2hit )
 end
[END]


1. SIMPLE VAR (l:94, c:14): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:94, c:18): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
EQUAL COMPARE EXP (l:94, c:16): a = b
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:94, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:18): b

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:94, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:14): a

Discovered an EXPLITEral: ( a = b )
1. SIMPLE VAR (l:94, c:28): c
1. SIMPLE VAR (l:94, c:33): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:94, c:30)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:94, c:28): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:94, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:33): d

(End of Assign Statement)

<BISON> EVALD an if_then_decl:  if ( a = b )  then ( c := d )
PRNSTAT-EXP: IF-EXP (l:94, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:94, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:94, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:94, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:18): b

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:94, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:94, c:30)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:94, c:28): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:94, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:33): d

(End of Assign Statement)
[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:95, c:9): mme
1. SIMPLE VAR (l:95, c:16): you
3. EXPLITERAL (lvalue): you
Discovered an EXPLITEral: you
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:95, c:13)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:95, c:9): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:95, c:16): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:95, c:16): you

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:95, c:13)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:95, c:9): mme

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:95, c:16): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:95, c:16): you

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: IF-EXP (l:94, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:94, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:94, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:94, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:18): b

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:94, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:94, c:30)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:94, c:28): c

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:94, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:94, c:33): d

(End of Assign Statement)
[end expression list]


END OF IF-EXP
[end expression list]


1. SIMPLE VAR (l:97, c:16): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:97, c:20): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
GR-COMP EXP (l:97, c:18): a > b
In the GR-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:97, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:97, c:20): b

In the GR-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:97, c:16): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:97, c:16): a

Discovered an EXPLITEral: ( a > b )
1. SIMPLE VAR (l:98, c:14): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:98, c:18): c
3. EXPLITERAL (lvalue): c
Discovered an EXPLITEral: c
EQUAL COMPARE EXP (l:98, c:16): a = c
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:98, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:18): c

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:98, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:14): a

Discovered an EXPLITEral: ( a = c )

<BISON> EVALD an if_then_decl:  if ( a = c )  then (  break )
PRNSTAT-EXP: IF-EXP (l:98, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:98, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:98, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:98, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:18): c

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:98, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: A BREAK-EXP at (l:98, c:28)

[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:99, c:9): a
1. SIMPLE VAR (l:99, c:14): a
3. EXPLITERAL (lvalue): a
1. SIMPLE VAR (l:99, c:18): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
MINUS EXP (l:99, c:16): a - b
In the MINUS EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:99, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:18): b

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:99, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:14): a

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:99, c:11)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:99, c:9): a

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:99, c:16): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:99, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:14): a

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:99, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:18): b

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:99, c:11)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:99, c:9): a

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:99, c:16): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:99, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:14): a

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:99, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:18): b

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: IF-EXP (l:98, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:98, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:98, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:98, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:18): c

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:98, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: A BREAK-EXP at (l:98, c:28)

[end expression list]


END OF IF-EXP
[end expression list]


1. SIMPLE VAR (l:100, c:11): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a

<BISON> EVALD a func call: f(a)
1. SIMPLE VAR (l:101, c:9): b
1. SIMPLE VAR (l:101, c:14): b
3. EXPLITERAL (lvalue): b
1. SIMPLE VAR (l:101, c:20): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a

<BISON> EVALD a func call: f(a)
Discovered an EXPLITEral: f(a)
ADD EXP (l:101, c:16): b + f(a)
In the ADD EXP, exp_left:
PRNSTAT-EXP: FUNC-CALL (l:101, c:20) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:101, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:101, c:20): a

[end expression list]


In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:101, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:101, c:14): b

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:101, c:11)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:101, c:9): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:101, c:16): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:101, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:101, c:14): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:101, c:20) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:101, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:101, c:20): a

[end expression list]


(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:101, c:11)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:101, c:9): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:101, c:16): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:101, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:101, c:14): b

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:101, c:20) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:101, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:101, c:20): a

[end expression list]


(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:100, c:11) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:100, c:11): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:100, c:11): a

[end expression list]


[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:99, c:11)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:99, c:9): a

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:99, c:16): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:99, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:14): a

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:99, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:99, c:18): b

(End of Assign Statement)
[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: IF-EXP (l:98, c:8)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:98, c:16): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:98, c:14): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:14): a

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:98, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:98, c:18): c

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:98, c:27)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: A BREAK-EXP at (l:98, c:28)

[end expression list]


END OF IF-EXP
[end expression list]


1. SIMPLE VAR (l:105, c:42): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a

<BISON> EVALD a func call: f(a)
Discovered an EXPLITEral: f(a)

<BISON> EVALD a func call: get_tree(f(a))
Discovered an EXPLITEral: get_tree(f(a))

<BISON> EVALD a var_decl:  var artysme : fitr := get_tree(f(a))
1. SIMPLE VAR (l:106, c:45): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a

<BISON> EVALD a func call: g(a)
Discovered an EXPLITEral: g(a)

<BISON> EVALD a func call: f(g(a))
Discovered an EXPLITEral: f(g(a))

<BISON> EVALD a func call: get_tree(f(g(a)))
Discovered an EXPLITEral: get_tree(f(g(a)))

<BISON> EVALD a var_decl:  var arborral : klad := get_tree(f(g(a)))
1. SIMPLE VAR (l:107, c:41): tree_root
3. EXPLITERAL (lvalue): tree_root
Discovered an EXPLITEral: tree_root

<BISON> EVALD a func call: get_number(tree_root)
Discovered an EXPLITEral: get_number(tree_root)
1. SIMPLE VAR (l:107, c:80): tree_root
3. EXPLITERAL (lvalue): tree_root
Discovered an EXPLITEral: tree_root

<BISON> EVALD a func call: last_value(tree_root)
Discovered an EXPLITEral: last_value(tree_root)
Discovered an ARRAY DEFN: [ get_number(tree_root) ] treeArray  of last_value(tree_root)

<BISON> EVALD a var_decl:  var brazencult := [ get_number(tree_root) ] treeArray  of last_value(tree_root)
1. SIMPLE VAR (l:108, c:38): avec_call
3. EXPLITERAL (lvalue): avec_call
Discovered an EXPLITEral: avec_call
1. SIMPLE VAR (l:108, c:49): label_data
3. EXPLITERAL (lvalue): label_data
Discovered an EXPLITEral: label_data

<BISON> EVALD a func call: ramp_3()Discovered an EXPLITEral: ramp_3()

<BISON> EVALD a func call: get_sample(avec_call , label_data , ramp_3())
1. SIMPLE VAR (l:108, c:95): me
3. EXPLITERAL (lvalue): me
Discovered an EXPLITEral: me

<BISON> EVALD a func call: trimester(me)
Discovered an EXPLITEral: trimester(me)
3. EXPLITERAL (pure num): 1 (108, 100)
3. EXPLITERAL (pure num): 2 (108, 104)
Discovered an EXPLITEral: 2
ADD EXP (l:108, c:102): 1 + 2
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:108, c:104)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:108, c:100)

3. EXPLITERAL (pure num): 3 (108, 114)
Discovered an EXPLITEral: 3
3. EXPLITERAL (pure num): 4 (108, 116)
Discovered an EXPLITEral: 4

<BISON> EVALD a func call: equals(3 , 4)
Discovered an EXPLITEral: equals(3 , 4)

<BISON> EVALD a func call: make_algo(trimester(me) , 1 + 2 , equals(3 , 4))
Discovered an EXPLITEral: make_algo(trimester(me) , 1 + 2 , equals(3 , 4))
ADD EXP (l:108, c:102): get_sample(avec_call , label_data , ramp_3()) + make_algo(trimester(me) , 1 + 2 , equals(3 , 4))
In the ADD EXP, exp_left:
PRNSTAT-EXP: FUNC-CALL (l:108, c:107) of function 'make_algo'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:108, c:107) of function 'equals'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:108, c:116)

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:108, c:114)

[end expression list]


[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: BOP EXP (l:108, c:102): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:108, c:100)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:108, c:104)

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:108, c:95) of function 'trimester'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:108, c:95): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:108, c:95): me

[end expression list]


[end expression list]


In the ADD EXP, exp_right:
PRNSTAT-EXP: FUNC-CALL (l:108, c:61) of function 'get_sample'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:108, c:61) of function 'ramp_3'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:108, c:49): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:108, c:49): label_data

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: VAR EXP (l:108, c:38): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:108, c:38): avec_call

[end expression list]



<BISON> EVALD a var_decl:  var nagobertic := get_sample(avec_call , label_data , ramp_3()) + make_algo(trimester(me) , 1 + 2 , equals(3 , 4))
TEST: nagobertic
TEST (pos line IS WRONG): 108
VARLIST (LOOKS FIRST), ADDED TO NULL (nagobertic)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:108, c:102): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:108, c:61) of function 'get_sample'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:108, c:61) of function 'ramp_3'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:108, c:49): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:108, c:49): label_data

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: VAR EXP (l:108, c:38): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:108, c:38): avec_call

[end expression list]


 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:108, c:107) of function 'make_algo'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:108, c:107) of function 'equals'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:108, c:116)

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: INT EXP : 3
PRNSTAT-EXP: INT EXP (l:108, c:114)

[end expression list]


[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: BOP EXP (l:108, c:102): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:108, c:100)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:108, c:104)

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:108, c:95) of function 'trimester'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:108, c:95): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:108, c:95): me

[end expression list]


[end expression list]


END-OF-EXP

VARLIST - ALSO ADDED (brazencult)
Expression associated with this var is as follows:
PRNSTAT-EXP: ARRAY EXP (l:107, c:27) of type = "treeArray"

ArraySize expression is as follows:
PRNSTAT-EXP: FUNC-CALL (l:107, c:41) of function 'get_number'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:107, c:41): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:107, c:41): tree_root

[end expression list]


ArrayInit expression is as follows:
PRNSTAT-EXP: FUNC-CALL (l:107, c:80) of function 'last_value'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:107, c:80): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:107, c:80): tree_root

[end expression list]


END-OF-EXP

VARLIST - ALSO ADDED (arborral)
Expression associated with this var is as follows:
PRNSTAT-EXP: FUNC-CALL (l:106, c:45) of function 'get_tree'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:106, c:45) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:106, c:45) of function 'g'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:106, c:45): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:106, c:45): a

[end expression list]


[end expression list]


[end expression list]


END-OF-EXP

VARLIST - ALSO ADDED (artysme)
Expression associated with this var is as follows:
PRNSTAT-EXP: FUNC-CALL (l:105, c:42) of function 'get_tree'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:105, c:42) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:105, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:105, c:42): a

[end expression list]


[end expression list]


END-OF-EXP

3. EXPLITERAL (pure num): 3 (112, 23)
Discovered an EXPLITEral: 3
3. EXPLITERAL (pure num): 10 (112, 28)
Discovered an EXPLITEral: 10
1. SIMPLE VAR (l:113, c:14): abc
3. EXPLITERAL (lvalue): abc
Discovered an EXPLITEral: abc

<BISON> EVALD a func call: f(abc)
1. SIMPLE VAR (l:114, c:17): b
3. EXPLITERAL (lvalue): b
1. SIMPLE VAR (l:114, c:21): abc
3. EXPLITERAL (lvalue): abc
Discovered an EXPLITEral: abc
GR-COMP EXP (l:114, c:19): b > abc
In the GR-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:114, c:21): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:21): abc

In the GR-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:114, c:17): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:17): b

Discovered an EXPLITEral: ( b > abc )
1. SIMPLE VAR (l:114, c:35): abc
1. SIMPLE VAR (l:114, c:42): abc
3. EXPLITERAL (lvalue): abc
3. EXPLITERAL (pure num): 1 (114, 48)
Discovered an EXPLITEral: 1
ADD EXP (l:114, c:46): abc + 1
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:114, c:48)

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:114, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:42): abc

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:114, c:39)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:114, c:35): abc

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:114, c:46): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:114, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:42): abc

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:114, c:48)

(End of Assign Statement)
1. SIMPLE VAR (l:114, c:58): abc
1. SIMPLE VAR (l:114, c:65): abc
3. EXPLITERAL (lvalue): abc
3. EXPLITERAL (pure num): 1 (114, 71)
Discovered an EXPLITEral: 1
MINUS EXP (l:114, c:69): abc - 1
In the MINUS EXP, exp_left:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:114, c:71)

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:114, c:65): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:65): abc

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:114, c:62)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:114, c:58): abc

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:114, c:69): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:114, c:65): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:65): abc

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:114, c:71)

(End of Assign Statement)

<BISON> EVALD an if_then_else_decl:  if ( b > abc )  then ( abc := abc + 1 )  else ( abc := abc - 1 )
PRNSTAT-EXP: IF-EXP (l:114, c:11)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:114, c:19): OpType=GRT THAN

 Printing about Left SubExp of GRT THAN now:
PRNSTAT-EXP: VAR EXP (l:114, c:17): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:17): b

 Printing about Right SubExp of GRT THAN now:
PRNSTAT-EXP: VAR EXP (l:114, c:21): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:21): abc

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:114, c:33)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:114, c:39)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:114, c:35): abc

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:114, c:46): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:114, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:42): abc

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:114, c:48)

(End of Assign Statement)
[end expression list]


IF ELSEBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:114, c:57)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:114, c:62)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:114, c:58): abc

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:114, c:69): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:114, c:65): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:114, c:65): abc

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:114, c:71)

(End of Assign Statement)
[end expression list]


END OF IF-EXP
1. SIMPLE VAR (l:115, c:18): abc
3. EXPLITERAL (lvalue): abc
Discovered an EXPLITEral: abc

<BISON> EVALD a func call: print(abc)

<BISON> EVALD a LET_decl (occurance 104,8):  let
[Type]
 var artysme : fitr := get_tree(f(a))
 in
[Body]
(  for abc := 3  to 10  do ( f(abc) ;
 if ( b > abc )  then ( abc := abc + 1 )  else ( abc := abc - 1 ) ;
print(abc) ) )
 end
[END]


GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl:  type ele1 = ele2
GOING IN TYPE FOR symbol ele1 ;)
MAIN BAPU TYPE DECL START


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = ele1
 TYPE RHS: ID TYPE
 id: ele2
[END TYPE LIST]


AVEC A NULL
1. SIMPLE VAR (l:123, c:11): ele1
3. EXPLITERAL (lvalue): ele1
Discovered an EXPLITEral: ele1

<BISON> EVALD a func call: tr(ele1)

<BISON> EVALD a LET_decl (occurance 122,2):  let
[Type]
false_type
 in
[Body]
( tr(ele1) )
 end
[END]


1. SIMPLE VAR (l:126, c:3): t
1. SIMPLE VAR (l:126, c:8): rectype
2. FIELD VAR (l:126, c:16): rectype.ele1
2. FIELD VAR (l:126, c:21): rectype.ele1.arry1
1. SIMPLE VAR (l:126, c:28): ele2
2. FIELD VAR (l:126, c:33): ele2.this
3. EXPLITERAL (lvalue): ele2.this
Discovered an EXPLITEral: ele2.this
3. SUBSCRIPT VAR (l:126, c:33): rectype.ele1.arry1[ ele2.this ]
PRNSTAT: A SUBSCRIPT VAR (l:126, c33)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:126, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:126, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:126, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:126, c:33): ele2 and this

3. EXPLITERAL (lvalue): rectype.ele1.arry1[ ele2.this ]
Discovered an EXPLITEral: rectype.ele1.arry1[ ele2.this ]
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:126, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:126, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:126, c:33): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:126, c33)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:126, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:126, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:126, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:126, c:33): ele2 and this

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:126, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:126, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:126, c:33): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:126, c33)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:126, c:21): [SEE-NEXT] and arry1
PRNSTAT-VAR: FIELD VAR (l:126, c:16): rectype and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:126, c:33): (details below)
PRNSTAT-VAR: FIELD VAR (l:126, c:33): ele2 and this

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
[end expression list]



<BISON> EVALD a func call: temp_mix()Discovered an EXPLITEral: temp_mix()

<BISON> EVALD a var_decl: var a : treetype := temp_mix()
1. SIMPLE VAR (l:134, c:4): b
1. SIMPLE VAR (l:134, c:9): c
3. EXPLITERAL (lvalue): c
1. SIMPLE VAR (l:134, c:13): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
ADD EXP (l:134, c:11): c + d
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:134, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:134, c:13): d

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:134, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:134, c:9): c

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:134, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:134, c:4): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:134, c:11): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:134, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:134, c:9): c

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:134, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:134, c:13): d

(End of Assign Statement)
1. SIMPLE VAR (l:135, c:4): c
1. SIMPLE VAR (l:135, c:9): e
3. EXPLITERAL (lvalue): e
1. SIMPLE VAR (l:135, c:12): f
3. EXPLITERAL (lvalue): f
Discovered an EXPLITEral: f
MINUS EXP (l:135, c:11): e - f
In the MINUS EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:135, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:135, c:12): f

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:135, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:135, c:9): e

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:135, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:135, c:4): c

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:135, c:11): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:135, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:135, c:9): e

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:135, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:135, c:12): f

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:135, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:135, c:4): c

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:135, c:11): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:135, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:135, c:9): e

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:135, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:135, c:12): f

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:134, c:6)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:134, c:4): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:134, c:11): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:134, c:9): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:134, c:9): c

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:134, c:13): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:134, c:13): d

(End of Assign Statement)
[end expression list]


1. SIMPLE VAR (l:140, c:10): b
1. SIMPLE VAR (l:140, c:15): c
3. EXPLITERAL (lvalue): c
1. SIMPLE VAR (l:140, c:19): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
ADD EXP (l:140, c:17): c + d
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:140, c:19): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:140, c:19): d

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:140, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:140, c:15): c

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:140, c:12)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:140, c:10): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:140, c:17): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:140, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:140, c:15): c

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:140, c:19): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:140, c:19): d

(End of Assign Statement)
1. SIMPLE VAR (l:141, c:10): c
1. SIMPLE VAR (l:141, c:15): e
3. EXPLITERAL (lvalue): e
1. SIMPLE VAR (l:141, c:18): f
3. EXPLITERAL (lvalue): f
Discovered an EXPLITEral: f
MINUS EXP (l:141, c:17): e - f
In the MINUS EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:141, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:141, c:18): f

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:141, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:141, c:15): e

On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:141, c:12)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:141, c:10): c

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:141, c:17): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:141, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:141, c:15): e

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:141, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:141, c:18): f

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:141, c:12)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:141, c:10): c

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:141, c:17): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:141, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:141, c:15): e

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:141, c:18): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:141, c:18): f

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:140, c:12)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:140, c:10): b

RHS of Assign Statement:
PRNSTAT-EXP: BOP EXP (l:140, c:17): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:140, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:140, c:15): c

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:140, c:19): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:140, c:19): d

(End of Assign Statement)
[end expression list]



<BISON> EVALD a func call: dummy()
<BISON> EVALD a LET_decl (occurance 137,3):  let
[Type]
false_function_kwd
 in
[Body]
( dummy() )
 end
[END]


1. SIMPLE VAR (l:151, c:3): t
1. SIMPLE VAR (l:151, c:8): arry1
3. EXPLITERAL (pure num): 1 (151, 15)
1. SIMPLE VAR (l:151, c:19): rec1
2. FIELD VAR (l:151, c:24): rec1.ele1
3. EXPLITERAL (lvalue): rec1.ele1
1. SIMPLE VAR (l:151, c:31): rec1
2. FIELD VAR (l:151, c:36): rec1.ele1
2. FIELD VAR (l:151, c:41): rec1.ele1.ele2
3. EXPLITERAL (lvalue): rec1.ele1.ele2
1. SIMPLE VAR (l:151, c:48): rec1
2. FIELD VAR (l:151, c:53): rec1.ele1
2. FIELD VAR (l:151, c:58): rec1.ele1.ele2
2. FIELD VAR (l:151, c:63): rec1.ele1.ele2.arry2
1. SIMPLE VAR (l:151, c:70): rec1
2. FIELD VAR (l:151, c:75): rec1.ele1
3. EXPLITERAL (lvalue): rec1.ele1
1. SIMPLE VAR (l:151, c:82): rec2
2. FIELD VAR (l:151, c:87): rec2.ele2
3. EXPLITERAL (lvalue): rec2.ele2
Discovered an EXPLITEral: rec2.ele2
MULT EXP (l:151, c:80): rec1.ele1 * rec2.ele2
In the MULT EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

In the MULT EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

3. SUBSCRIPT VAR (l:151, c:87): rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ]
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:151, c:63): [SEE-NEXT] and arry2
PRNSTAT: FIELD VAR (l:151, c:58): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:53): rec1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:80): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

3. EXPLITERAL (lvalue): rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ]
Discovered an EXPLITEral: rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ]
LOG-AND EXP (l:151, c:46): rec1.ele1.ele2 & rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ]
In the LOG-AND EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:151, c:63): [SEE-NEXT] and arry2
PRNSTAT: FIELD VAR (l:151, c:58): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:53): rec1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:80): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

In the LOG-AND EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:151, c:41): (details below)
PRNSTAT: FIELD VAR (l:151, c:41): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:36): rec1 and ele1

ADD EXP (l:151, c:29): rec1.ele1 + rec1.ele1.ele2 & rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:151, c:46): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:41): (details below)
PRNSTAT: FIELD VAR (l:151, c:41): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:36): rec1 and ele1

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:151, c:63): [SEE-NEXT] and arry2
PRNSTAT: FIELD VAR (l:151, c:58): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:53): rec1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:80): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:151, c:24): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:24): rec1 and ele1

ADD EXP (l:151, c:29): 1 + rec1.ele1 + rec1.ele1.ele2 & rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:151, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:151, c:24): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:24): rec1 and ele1

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:151, c:46): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:41): (details below)
PRNSTAT: FIELD VAR (l:151, c:41): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:36): rec1 and ele1

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:151, c:63): [SEE-NEXT] and arry2
PRNSTAT: FIELD VAR (l:151, c:58): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:53): rec1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:80): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:151, c:15)

3. SUBSCRIPT VAR (l:151, c:87): arry1[ 1 + rec1.ele1 + rec1.ele1.ele2 & rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ] ]
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:151, c:8): arry1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:151, c:15)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:151, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:151, c:24): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:24): rec1 and ele1

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:151, c:46): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:41): (details below)
PRNSTAT: FIELD VAR (l:151, c:41): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:36): rec1 and ele1

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:151, c:63): [SEE-NEXT] and arry2
PRNSTAT: FIELD VAR (l:151, c:58): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:53): rec1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:80): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

3. EXPLITERAL (lvalue): arry1[ 1 + rec1.ele1 + rec1.ele1.ele2 & rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ] ]
Discovered an EXPLITEral: arry1[ 1 + rec1.ele1 + rec1.ele1.ele2 & rec1.ele1.ele2.arry2[ rec1.ele1 * rec2.ele2 ] ]
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:151, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:151, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:151, c:8): arry1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:151, c:15)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:151, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:151, c:24): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:24): rec1 and ele1

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:151, c:46): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:41): (details below)
PRNSTAT: FIELD VAR (l:151, c:41): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:36): rec1 and ele1

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:151, c:63): [SEE-NEXT] and arry2
PRNSTAT: FIELD VAR (l:151, c:58): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:53): rec1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:80): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

(End of Assign Statement)
1. SIMPLE VAR (l:152, c:3): m
1. SIMPLE VAR (l:152, c:8): you
3. EXPLITERAL (lvalue): you
Discovered an EXPLITEral: you
On adding the asn-exp,
PRNSTAT-EXP: ASN-EXP (l:152, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:152, c:3): m

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:152, c:8): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:152, c:8): you

(End of Assign Statement)
On discovering the asn-exp,

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:152, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:152, c:3): m

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:152, c:8): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:152, c:8): you

(End of Assign Statement)
[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: ASN-EXP (l:151, c:5)

LHS of Assign Statement:
PRNSTAT-VAR: SIMPLE VAR (l:151, c:3): t

RHS of Assign Statement:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:151, c:8): arry1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:151, c:15)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:151, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:151, c:24): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:24): rec1 and ele1

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:151, c:46): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:41): (details below)
PRNSTAT: FIELD VAR (l:151, c:41): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:36): rec1 and ele1

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:151, c87)
In subscript-var, the varname is as follows: 
PRNSTAT: FIELD VAR (l:151, c:63): [SEE-NEXT] and arry2
PRNSTAT: FIELD VAR (l:151, c:58): [SEE-NEXT] and ele2
PRNSTAT-VAR: FIELD VAR (l:151, c:53): rec1 and ele1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: BOP EXP (l:151, c:80): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:75): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:75): rec1 and ele1

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:151, c:87): (details below)
PRNSTAT-VAR: FIELD VAR (l:151, c:87): rec2 and ele2

(End of Assign Statement)
[end expression list]


GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl:  type foo = bar
GOING IN TYPE FOR symbol foo ;)
MAIN BAPU TYPE DECL START


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = foo
 TYPE RHS: ID TYPE
 id: bar
[END TYPE LIST]


AVEC A NULL
1. SIMPLE VAR (l:155, c:17): i
3. EXPLITERAL (lvalue): i
Discovered an EXPLITEral: i

<BISON> EVALD a func call: print(i)
1. SIMPLE VAR (l:155, c:26): i
3. EXPLITERAL (lvalue): i
Discovered an EXPLITEral: i

<BISON> EVALD a func call: use(i)

<BISON> EVALD a LET_decl (occurance 154,2):  let
[Type]
false_type
 in
[Body]
( print(i) ;
use(i) )
 end
[END]


GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl:  type foo = bara
GOING IN TYPE FOR symbol foo ;)

<BISON> EVALD a type_decl:  type i = foo
GOING IN TYPE FOR symbol i ;)
MAIN BAPU TYPE DECL START


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = foo
 TYPE RHS: ID TYPE
 id: bara
2 TYPE HEADER
 TYPE LHS = i
 TYPE RHS: ID TYPE
 id: foo
[END TYPE LIST]


AVEC A NULL
1. SIMPLE VAR (l:161, c:17): i
3. EXPLITERAL (lvalue): i
Discovered an EXPLITEral: i

<BISON> EVALD a func call: print(i)
1. SIMPLE VAR (l:161, c:26): i
3. EXPLITERAL (lvalue): i
Discovered an EXPLITEral: i

<BISON> EVALD a func call: use(i)

<BISON> EVALD a LET_decl (occurance 159,2):  let
[Type]
false_type
 in
[Body]
( print(i) ;
use(i) )
 end
[END]


3. EXPLITERAL (pure num): 1 (165, 14)
1. SIMPLE VAR (l:165, c:20): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a
1. SIMPLE VAR (l:165, c:22): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b

<BISON> EVALD a func call: f(a , b)
1. SIMPLE VAR (l:165, c:27): r
2. FIELD VAR (l:165, c:29): r.e
3. EXPLITERAL (lvalue): r.e
1. SIMPLE VAR (l:165, c:33): a
1. SIMPLE VAR (l:165, c:35): r
2. FIELD VAR (l:165, c:37): r.e
3. EXPLITERAL (lvalue): r.e
Discovered an EXPLITEral: r.e
3. SUBSCRIPT VAR (l:165, c:37): a[ r.e ]
PRNSTAT: A SUBSCRIPT VAR (l:165, c37)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:165, c:33): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:37): r and e

3. EXPLITERAL (lvalue): a[ r.e ]
Discovered an EXPLITEral: a[ r.e ]
ADD EXP (l:165, c:31): r.e + a[ r.e ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:165, c37)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:165, c:33): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:37): r and e

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:165, c:29): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:29): r and e

ADD EXP (l:165, c:31): f(a , b) + r.e + a[ r.e ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:165, c:31): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:165, c:29): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:29): r and e

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:165, c37)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:165, c:33): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:37): r and e

In the ADD EXP, exp_right:
PRNSTAT-EXP: FUNC-CALL (l:165, c:22) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:22): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:165, c:22): b

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:165, c:20): a

[end expression list]


ADD EXP (l:165, c:31): 1 + f(a , b) + r.e + a[ r.e ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:165, c:31): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:165, c:22) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:22): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:165, c:22): b

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:165, c:20): a

[end expression list]


 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:165, c:31): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:165, c:29): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:29): r and e

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:165, c37)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:165, c:33): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:37): r and e

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:165, c:14)


<BISON> EVALD a var_decl:  var am := 1 + f(a , b) + r.e + a[ r.e ]
TEST: am
TEST (pos line IS WRONG): 165
3. EXPLITERAL (pure num): 2 (165, 51)
Discovered an EXPLITEral: 2

<BISON> EVALD a var_decl:  var bm := 2
TEST: bm
TEST (pos line IS WRONG): 165
VARLIST (LOOKS FIRST), ADDED TO NULL (bm)
Expression associated with this var is as follows:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:165, c:51)

END-OF-EXP

VARLIST - ALSO ADDED (am)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:165, c:31): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:165, c:14)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:165, c:31): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:165, c:22) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:22): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:165, c:22): b

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:165, c:20): a

[end expression list]


 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:165, c:31): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:165, c:29): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:29): r and e

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:165, c37)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:165, c:33): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:165, c:37): (details below)
PRNSTAT-VAR: FIELD VAR (l:165, c:37): r and e

END-OF-EXP


<BISON> EVALD a func call: try()
<BISON> EVALD a LET_decl (occurance 164,2):  let
[Type]
 var am := 1 + f(a , b) + r.e + a[ r.e ]
 in
[Body]
( try() )
 end
[END]


3. EXPLITERAL (pure num): 1 (172, 11)
1. SIMPLE VAR (l:172, c:17): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a
1. SIMPLE VAR (l:172, c:19): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b

<BISON> EVALD a func call: f(a , b)
1. SIMPLE VAR (l:172, c:24): r
2. FIELD VAR (l:172, c:26): r.e
3. EXPLITERAL (lvalue): r.e
1. SIMPLE VAR (l:172, c:30): a
1. SIMPLE VAR (l:172, c:32): r
2. FIELD VAR (l:172, c:34): r.e
3. EXPLITERAL (lvalue): r.e
Discovered an EXPLITEral: r.e
3. SUBSCRIPT VAR (l:172, c:34): a[ r.e ]
PRNSTAT: A SUBSCRIPT VAR (l:172, c34)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:172, c:30): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:34): r and e

3. EXPLITERAL (lvalue): a[ r.e ]
Discovered an EXPLITEral: a[ r.e ]
ADD EXP (l:172, c:28): r.e + a[ r.e ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:172, c34)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:172, c:30): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:34): r and e

In the ADD EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:172, c:26): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:26): r and e

ADD EXP (l:172, c:28): f(a , b) + r.e + a[ r.e ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:172, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:172, c:26): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:26): r and e

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:172, c34)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:172, c:30): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:34): r and e

In the ADD EXP, exp_right:
PRNSTAT-EXP: FUNC-CALL (l:172, c:19) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:19): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:172, c:19): b

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:17): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:172, c:17): a

[end expression list]


ADD EXP (l:172, c:28): 1 + f(a , b) + r.e + a[ r.e ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:172, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:172, c:19) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:19): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:172, c:19): b

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:17): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:172, c:17): a

[end expression list]


 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:172, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:172, c:26): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:26): r and e

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:172, c34)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:172, c:30): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:34): r and e

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:172, c:11)


<BISON> EVALD a var_decl: var am := 1 + f(a , b) + r.e + a[ r.e ]
TEST: am
TEST (pos line IS WRONG): 173
3. EXPLITERAL (pure num): 2 (173, 11)
1. SIMPLE VAR (l:173, c:17): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a
1. SIMPLE VAR (l:173, c:20): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
1. SIMPLE VAR (l:173, c:25): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a
1. SIMPLE VAR (l:173, c:28): b
3. EXPLITERAL (lvalue): b
Discovered an EXPLITEral: b
1. SIMPLE VAR (l:173, c:31): c
3. EXPLITERAL (lvalue): c
Discovered an EXPLITEral: c
1. SIMPLE VAR (l:173, c:34): d
3. EXPLITERAL (lvalue): d
Discovered an EXPLITEral: d
1. SIMPLE VAR (l:173, c:37): e
3. EXPLITERAL (lvalue): e
Discovered an EXPLITEral: e

<BISON> EVALD a func call: f(a , b , c , d , e)
Discovered an EXPLITEral: f(a , b , c , d , e)
1. SIMPLE VAR (l:173, c:41): r
2. FIELD VAR (l:173, c:43): r.e1
2. FIELD VAR (l:173, c:46): r.e1.e2
3. EXPLITERAL (lvalue): r.e1.e2
Discovered an EXPLITEral: r.e1.e2
1. SIMPLE VAR (l:173, c:50): ar1
1. SIMPLE VAR (l:173, c:54): e1
3. EXPLITERAL (lvalue): e1
Discovered an EXPLITEral: e1
3. SUBSCRIPT VAR (l:173, c:54): ar1[ e1 ]
PRNSTAT: A SUBSCRIPT VAR (l:173, c54)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:173, c:50): ar1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:54): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:54): e1

2. FIELD VAR (l:173, c:58): ar1[ e1 ].e2
3. EXPLITERAL (lvalue): ar1[ e1 ].e2
Discovered an EXPLITEral: ar1[ e1 ].e2

<BISON> EVALD a func call: f(a , b , f(a , b , c , d , e) , r.e1.e2 , ar1[ e1 ].e2)
Discovered an EXPLITEral: f(a , b , f(a , b , c , d , e) , r.e1.e2 , ar1[ e1 ].e2)
ADD EXP (l:173, c:13): 2 + f(a , b , f(a , b , c , d , e) , r.e1.e2 , ar1[ e1 ].e2)
In the ADD EXP, exp_left:
PRNSTAT-EXP: FUNC-CALL (l:173, c:58) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:58): (details below)
PRNSTAT: FIELD VAR (l:173, c:58): [SEE-NEXT] and e2
PRNSTAT: A SUBSCRIPT VAR (l:173, c54)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:173, c:50): ar1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:54): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:54): e1

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:46): (details below)
PRNSTAT: FIELD VAR (l:173, c:46): [SEE-NEXT] and e2
PRNSTAT-VAR: FIELD VAR (l:173, c:43): r and e1

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:173, c:37) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:37): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:37): e

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:34): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:34): d

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:31): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:31): c

[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:28): b

[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:25): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:25): a

[end expression list]


[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:20): b

[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:17): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:17): a

[end expression list]


In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:173, c:11)


<BISON> EVALD a var_decl: var bm := 2 + f(a , b , f(a , b , c , d , e) , r.e1.e2 , ar1[ e1 ].e2)
TEST: bm
TEST (pos line IS WRONG): 174
1. SIMPLE VAR (l:174, c:33): a
3. EXPLITERAL (lvalue): a
Discovered an EXPLITEral: a

<BISON> EVALD a func call: h(a)
Discovered an EXPLITEral: h(a)

<BISON> EVALD a func call: g(h(a))
Discovered an EXPLITEral: g(h(a))

<BISON> EVALD a func call: f(g(h(a)))
Discovered an EXPLITEral: f(g(h(a)))

<BISON> EVALD a func call: get_tree(f(g(h(a))))
Discovered an EXPLITEral: get_tree(f(g(h(a))))

<BISON> EVALD a var_decl: var cm :  int := get_tree(f(g(h(a))))
3. EXPLITERAL (pure num): 4 (175, 24)
Discovered an EXPLITEral: 4

<BISON> EVALD a var_decl: var dm : treeLeaves := 4
3. EXPLITERAL (pure num): 100 (176, 20)
3. EXPLITERAL (pure num): 4 (176, 26)
3. EXPLITERAL (pure num): 349 (176, 30)
3. EXPLITERAL (pure num): 2 (176, 36)
Discovered an EXPLITEral: 2
ADD EXP (l:176, c:34): 349 + 2
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:176, c:36)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:176, c:30)

ADD EXP (l:176, c:34): 4 + 349 + 2
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:176, c:34): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:176, c:30)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:176, c:36)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:176, c:26)

ADD EXP (l:176, c:34): 100 + 4 + 349 + 2
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:176, c:34): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:176, c:26)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:176, c:34): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:176, c:30)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:176, c:36)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:176, c:20)


<BISON> EVALD a var_decl: var em :  string := 100 + 4 + 349 + 2
3. EXPLITERAL (pure num): 100 (177, 11)
3. EXPLITERAL (pure num): 41 (177, 19)
3. EXPLITERAL (pure num): 3490 (177, 24)
3. EXPLITERAL (pure num): 21 (177, 31)
Discovered an EXPLITEral: 21
ADD EXP (l:177, c:29): 3490 + 21
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 21
PRNSTAT-EXP: INT EXP (l:177, c:31)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 3490
PRNSTAT-EXP: INT EXP (l:177, c:24)

ADD EXP (l:177, c:29): 41 + 3490 + 21
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:177, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3490
PRNSTAT-EXP: INT EXP (l:177, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 21
PRNSTAT-EXP: INT EXP (l:177, c:31)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 41
PRNSTAT-EXP: INT EXP (l:177, c:19)

1. SIMPLE VAR (l:177, c:40): tiglork
3. EXPLITERAL (lvalue): tiglork
3. EXPLITERAL (pure num): 45 (177, 50)
Discovered an EXPLITEral: 45
MINUS EXP (l:177, c:48): tiglork - 45
In the MINUS EXP, exp_left:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:177, c:50)

In the MINUS EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:177, c:40): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:177, c:40): tiglork

3. EXPLITERAL (pure num): 98 (177, 58)
Discovered an EXPLITEral: 98
Discovered an EXPLITEral: ( 98 )
ADD EXP (l:177, c:55): ( tiglork - 45 ) + ( 98 )
In the ADD EXP, exp_left:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:177, c:58)

In the ADD EXP, exp_right:
PRNSTAT-EXP: BOP EXP (l:177, c:48): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:177, c:40): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:177, c:40): tiglork

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:177, c:50)

MINUS EXP (l:177, c:48): ( 41 + 3490 + 21 ) - ( tiglork - 45 ) + ( 98 )
In the MINUS EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:177, c:55): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:48): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:177, c:40): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:177, c:40): tiglork

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:177, c:50)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:177, c:58)

In the MINUS EXP, exp_right:
PRNSTAT-EXP: BOP EXP (l:177, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 41
PRNSTAT-EXP: INT EXP (l:177, c:19)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3490
PRNSTAT-EXP: INT EXP (l:177, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 21
PRNSTAT-EXP: INT EXP (l:177, c:31)

ADD EXP (l:177, c:55): 100 + ( 41 + 3490 + 21 ) - ( tiglork - 45 ) + ( 98 )
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:177, c:48): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 41
PRNSTAT-EXP: INT EXP (l:177, c:19)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3490
PRNSTAT-EXP: INT EXP (l:177, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 21
PRNSTAT-EXP: INT EXP (l:177, c:31)

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:55): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:48): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:177, c:40): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:177, c:40): tiglork

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:177, c:50)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:177, c:58)

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:177, c:11)


<BISON> EVALD a var_decl: var fm := 100 + ( 41 + 3490 + 21 ) - ( tiglork - 45 ) + ( 98 )
TEST: fm
TEST (pos line IS WRONG): 178
3. EXPLITERAL (pure num): 100 (178, 12)
3. EXPLITERAL (pure num): 4 (178, 20)
3. EXPLITERAL (pure num): 349 (178, 24)
1. SIMPLE VAR (l:178, c:30): rec
2. FIELD VAR (l:178, c:34): rec.ident
3. EXPLITERAL (lvalue): rec.ident
Discovered an EXPLITEral: rec.ident
MULT EXP (l:178, c:28): 349 * rec.ident
In the MULT EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:178, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:178, c:34): rec and ident

In the MULT EXP, exp_right:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:178, c:24)

ADD EXP (l:178, c:22): 4 + 349 * rec.ident
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:178, c:28): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:178, c:24)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:178, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:178, c:34): rec and ident

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:178, c:20)

1. SIMPLE VAR (l:178, c:46): tiglork
3. EXPLITERAL (lvalue): tiglork
3. EXPLITERAL (pure num): 45 (178, 56)
Discovered an EXPLITEral: 45
DIV EXP (l:178, c:54): tiglork / 45
In the DIV EXP, exp_left:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:178, c:56)

In the DIV EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:178, c:46): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:46): tiglork

3. EXPLITERAL (pure num): 98 (178, 64)
Discovered an EXPLITEral: 98
1. SIMPLE VAR (l:178, c:70): arry
1. SIMPLE VAR (l:178, c:75): element
3. EXPLITERAL (lvalue): element
Discovered an EXPLITEral: element
3. SUBSCRIPT VAR (l:178, c:75): arry[ element ]
PRNSTAT: A SUBSCRIPT VAR (l:178, c75)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:178, c:70): arry

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:75): element

3. EXPLITERAL (lvalue): arry[ element ]
Discovered an EXPLITEral: arry[ element ]
LOG-AND EXP (l:178, c:68): ( 98 ) & arry[ element ]
In the LOG-AND EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:178, c75)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:178, c:70): arry

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:75): element

In the LOG-AND EXP, exp_right:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:178, c:64)

DIV EXP (l:178, c:61): ( tiglork / 45 ) / ( 98 ) & arry[ element ]
In the DIV EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:178, c:68): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:178, c:64)

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:178, c75)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:178, c:70): arry

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:75): element

In the DIV EXP, exp_right:
PRNSTAT-EXP: BOP EXP (l:178, c:54): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: VAR EXP (l:178, c:46): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:46): tiglork

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:178, c:56)

MINUS EXP (l:178, c:42): ( 4 + 349 * rec.ident ) - ( tiglork / 45 ) / ( 98 ) & arry[ element ]
In the MINUS EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:178, c:61): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:178, c:54): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: VAR EXP (l:178, c:46): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:46): tiglork

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:178, c:56)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:178, c:68): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:178, c:64)

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:178, c75)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:178, c:70): arry

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:75): element

In the MINUS EXP, exp_right:
PRNSTAT-EXP: BOP EXP (l:178, c:22): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:178, c:20)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:28): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:178, c:24)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:178, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:178, c:34): rec and ident

ADD EXP (l:178, c:22): 100 + ( 4 + 349 * rec.ident ) - ( tiglork / 45 ) / ( 98 ) & arry[ element ]
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:178, c:42): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:22): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:178, c:20)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:28): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:178, c:24)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:178, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:178, c:34): rec and ident

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:61): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:178, c:54): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: VAR EXP (l:178, c:46): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:46): tiglork

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:178, c:56)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:178, c:68): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:178, c:64)

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:178, c75)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:178, c:70): arry

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:75): element

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:178, c:12)


<BISON> EVALD a var_decl: var fm1 := 100 + ( 4 + 349 * rec.ident ) - ( tiglork / 45 ) / ( 98 ) & arry[ element ]
TEST: fm1
TEST (pos line IS WRONG): 179
3. EXPLITERAL (pure num): 100 (179, 12)
3. EXPLITERAL (pure num): 4 (179, 21)
3. EXPLITERAL (pure num): 349 (179, 26)
1. SIMPLE VAR (l:179, c:33): factor
3. EXPLITERAL (lvalue): factor
1. SIMPLE VAR (l:179, c:42): nofactor
3. EXPLITERAL (lvalue): nofactor
Discovered an EXPLITEral: nofactor
LOG-OR EXP (l:179, c:40): factor | nofactor
In the LOG-OR EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:179, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:42): nofactor

In the LOG-OR EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:179, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:33): factor

Discovered an EXPLITEral: ( factor | nofactor )
MULT EXP (l:179, c:30): 349 * ( factor | nofactor )
In the MULT EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:179, c:40): OpType=OR OP

 Printing about Left SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:33): factor

 Printing about Right SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:42): nofactor

In the MULT EXP, exp_right:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:179, c:26)

GR-EQ-COMP EXP (l:179, c:23): 4 >= 349 * ( factor | nofactor )
In the GR-EQ-COMP EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:179, c:30): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:179, c:26)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:179, c:40): OpType=OR OP

 Printing about Left SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:33): factor

 Printing about Right SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:42): nofactor

In the GR-EQ-COMP EXP, exp_right:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:179, c:21)

1. SIMPLE VAR (l:179, c:59): tiglora
3. EXPLITERAL (lvalue): tiglora
1. SIMPLE VAR (l:179, c:69): k
3. EXPLITERAL (lvalue): k
Discovered an EXPLITEral: k
LOG-AND EXP (l:179, c:67): tiglora & k
In the LOG-AND EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:179, c:69): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:69): k

In the LOG-AND EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:179, c:59): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:59): tiglora

3. EXPLITERAL (pure num): 45 (179, 75)
Discovered an EXPLITEral: 45
DIV EXP (l:179, c:72): ( tiglora & k ) / - 45
In the DIV EXP, exp_left:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:179, c:75)

In the DIV EXP, exp_right:
PRNSTAT-EXP: BOP EXP (l:179, c:67): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:59): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:59): tiglora

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:69): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:69): k

3. EXPLITERAL (pure num): 98 (179, 83)
1. SIMPLE VAR (l:179, c:88): temperature
3. EXPLITERAL (lvalue): temperature
Discovered an EXPLITEral: temperature
EQUAL COMPARE EXP (l:179, c:86): 98 = temperature
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:179, c:88): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:88): temperature

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:179, c:83)

Discovered an EXPLITEral: ( 98 = temperature )
DIV EXP (l:179, c:80): ( ( tiglora & k ) / - 45 ) / ( 98 = temperature )
In the DIV EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:179, c:86): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:179, c:83)

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:179, c:88): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:88): temperature

In the DIV EXP, exp_right:
PRNSTAT-EXP: BOP EXP (l:179, c:72): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:67): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:59): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:59): tiglora

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:69): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:69): k

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:179, c:75)

MINUS EXP (l:179, c:74): ( 4 >= 349 * ( factor | nofactor ) ) - ( ( tiglora & k ) / - 45 ) / ( 98 = temperature )
In the MINUS EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:179, c:80): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:72): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:67): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:59): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:59): tiglora

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:69): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:69): k

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:179, c:75)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:86): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:179, c:83)

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:179, c:88): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:88): temperature

In the MINUS EXP, exp_right:
PRNSTAT-EXP: BOP EXP (l:179, c:23): OpType=GR EQ

 Printing about Left SubExp of GR EQ now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:179, c:21)

 Printing about Right SubExp of GR EQ now:
PRNSTAT-EXP: BOP EXP (l:179, c:30): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:179, c:26)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:179, c:40): OpType=OR OP

 Printing about Left SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:33): factor

 Printing about Right SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:42): nofactor

ADD EXP (l:179, c:16): 100 + - ( 4 >= 349 * ( factor | nofactor ) ) - ( ( tiglora & k ) / - 45 ) / ( 98 = temperature )
In the ADD EXP, exp_left:
PRNSTAT-EXP: BOP EXP (l:179, c:74): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:179, c:23): OpType=GR EQ

 Printing about Left SubExp of GR EQ now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:179, c:21)

 Printing about Right SubExp of GR EQ now:
PRNSTAT-EXP: BOP EXP (l:179, c:30): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:179, c:26)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:179, c:40): OpType=OR OP

 Printing about Left SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:33): factor

 Printing about Right SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:42): nofactor

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:179, c:80): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:72): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:67): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:59): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:59): tiglora

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:69): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:69): k

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:179, c:75)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:86): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:179, c:83)

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:179, c:88): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:88): temperature

In the ADD EXP, exp_right:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:179, c:12)


<BISON> EVALD a var_decl: var fm2 := 100 + - ( 4 >= 349 * ( factor | nofactor ) ) - ( ( tiglora & k ) / - 45 ) / ( 98 = temperature )
TEST: fm2
TEST (pos line IS WRONG): 179
GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl: type gagola = cherubee
GOING IN TYPE FOR symbol gagola ;)
3. EXPLITERAL (pure num): 4 (184, 13)
Discovered an EXPLITEral: 4

<BISON> EVALD a var_decl: var gaga := 4
TEST: gaga
TEST (pos line IS WRONG): 184
GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl: type nagui = shacha
GOING IN TYPE FOR symbol nagui ;)

<BISON> EVALD a type_decl: type argulza = amerlxio
GOING IN TYPE FOR symbol argulza ;)
3. EXPLITERAL (pure num): 19245 (189, 27)
Discovered an EXPLITEral: 19245

<BISON> EVALD a var_decl: var xstrazzi : argulza := 19245
GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl: type orpheillo = nazarienna
GOING IN TYPE FOR symbol orpheillo ;)

<BISON> EVALD a type_decl: type rr =  array  of stars
GOING IN TYPE FOR symbol rr ;)
FIELD LIST DETAILS:
symbol yy for type cats
symbol gg for type rodents
[END]

<BISON> EVALD a type_decl: type yy = { gg : rodents , yy : cats }
GOING IN TYPE FOR symbol yy ;)
FIELD LIST DETAILS:
symbol dd for type only_dogs
[END]

<BISON> EVALD a type_decl: type zz = { dd : only_dogs }
GOING IN TYPE FOR symbol zz ;)
MAIN BAPU TYPE DECL START


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = orpheillo
 TYPE RHS: ID TYPE
 id: nazarienna
2 TYPE HEADER
 TYPE LHS = rr
 TYPE RHS: ARRAY TYPE
 array: stars
3 TYPE HEADER
 TYPE LHS = yy
 TYPE RHS: RECORD TYPE
FIELD LIST DETAILS:
symbol yy for type cats
symbol gg for type rodents
[END]
4 TYPE HEADER
 TYPE LHS = zz
 TYPE RHS: RECORD TYPE
FIELD LIST DETAILS:
symbol dd for type only_dogs
[END]
[END TYPE LIST]


AVEC A NULL
VARLIST - ALSO ADDED (xstrazzi)
Expression associated with this var is as follows:
PRNSTAT-EXP: INT EXP : 19245
PRNSTAT-EXP: INT EXP (l:189, c:27)

END-OF-EXP

MAIN BAPU TYPE DECL CONTD


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = nagui
 TYPE RHS: ID TYPE
 id: shacha
2 TYPE HEADER
 TYPE LHS = argulza
 TYPE RHS: ID TYPE
 id: amerlxio
[END TYPE LIST]


VARLIST - ALSO ADDED (gaga)
Expression associated with this var is as follows:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:184, c:13)

END-OF-EXP

MAIN BAPU TYPE DECL CONTD


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = gagola
 TYPE RHS: ID TYPE
 id: cherubee
[END TYPE LIST]


VARLIST - ALSO ADDED (fm2)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:179, c:16): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:179, c:12)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:179, c:74): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:179, c:23): OpType=GR EQ

 Printing about Left SubExp of GR EQ now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:179, c:21)

 Printing about Right SubExp of GR EQ now:
PRNSTAT-EXP: BOP EXP (l:179, c:30): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:179, c:26)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:179, c:40): OpType=OR OP

 Printing about Left SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:33): factor

 Printing about Right SubExp of OR OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:42): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:42): nofactor

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:179, c:80): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:72): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:67): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:59): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:59): tiglora

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:179, c:69): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:69): k

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:179, c:75)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:179, c:86): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:179, c:83)

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:179, c:88): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:179, c:88): temperature

END-OF-EXP

VARLIST - ALSO ADDED (fm1)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:178, c:22): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:178, c:12)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:42): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:22): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:178, c:20)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:28): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:178, c:24)

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:178, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:178, c:34): rec and ident

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:178, c:61): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:178, c:54): OpType=DIV

 Printing about Left SubExp of DIV now:
PRNSTAT-EXP: VAR EXP (l:178, c:46): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:46): tiglork

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:178, c:56)

 Printing about Right SubExp of DIV now:
PRNSTAT-EXP: BOP EXP (l:178, c:68): OpType=AND OP

 Printing about Left SubExp of AND OP now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:178, c:64)

 Printing about Right SubExp of AND OP now:
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:178, c75)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:178, c:70): arry

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:178, c:75): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:178, c:75): element

END-OF-EXP

VARLIST - ALSO ADDED (fm)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:177, c:55): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:177, c:11)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:48): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 41
PRNSTAT-EXP: INT EXP (l:177, c:19)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:29): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 3490
PRNSTAT-EXP: INT EXP (l:177, c:24)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 21
PRNSTAT-EXP: INT EXP (l:177, c:31)

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:55): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:177, c:48): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:177, c:40): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:177, c:40): tiglork

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: INT EXP : 45
PRNSTAT-EXP: INT EXP (l:177, c:50)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 98
PRNSTAT-EXP: INT EXP (l:177, c:58)

END-OF-EXP

VARLIST - ALSO ADDED (em)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:176, c:34): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 100
PRNSTAT-EXP: INT EXP (l:176, c:20)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:176, c:34): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:176, c:26)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:176, c:34): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 349
PRNSTAT-EXP: INT EXP (l:176, c:30)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:176, c:36)

END-OF-EXP

VARLIST - ALSO ADDED (dm)
Expression associated with this var is as follows:
PRNSTAT-EXP: INT EXP : 4
PRNSTAT-EXP: INT EXP (l:175, c:24)

END-OF-EXP

VARLIST - ALSO ADDED (cm)
Expression associated with this var is as follows:
PRNSTAT-EXP: FUNC-CALL (l:174, c:33) of function 'get_tree'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:174, c:33) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:174, c:33) of function 'g'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:174, c:33) of function 'h'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:174, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:174, c:33): a

[end expression list]


[end expression list]


[end expression list]


[end expression list]


END-OF-EXP

VARLIST - ALSO ADDED (bm)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:173, c:13): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:173, c:11)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:173, c:58) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:58): (details below)
PRNSTAT: FIELD VAR (l:173, c:58): [SEE-NEXT] and e2
PRNSTAT: A SUBSCRIPT VAR (l:173, c54)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:173, c:50): ar1

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:54): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:54): e1

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:46): (details below)
PRNSTAT: FIELD VAR (l:173, c:46): [SEE-NEXT] and e2
PRNSTAT-VAR: FIELD VAR (l:173, c:43): r and e1

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:173, c:37) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:37): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:37): e

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:34): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:34): d

[EXPLIST] expression no. 3 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:31): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:31): c

[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:28): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:28): b

[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:25): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:25): a

[end expression list]


[EXPLIST] expression no. 4 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:20): b

[EXPLIST] expression no. 5 is as follows: 
PRNSTAT-EXP: VAR EXP (l:173, c:17): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:173, c:17): a

[end expression list]


END-OF-EXP

VARLIST - ALSO ADDED (am)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:172, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 1
PRNSTAT-EXP: INT EXP (l:172, c:11)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:172, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: FUNC-CALL (l:172, c:19) of function 'f'

Parameters passed to this function are as follows:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:19): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:172, c:19): b

[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:17): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:172, c:17): a

[end expression list]


 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:172, c:28): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:172, c:26): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:26): r and e

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:172, c34)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:172, c:30): a

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:172, c:34): (details below)
PRNSTAT-VAR: FIELD VAR (l:172, c:34): r and e

END-OF-EXP

VARLIST - ALSO ADDED (a)
Expression associated with this var is as follows:
PRNSTAT-EXP: FUNC-CALL (l:129, c:20) of function 'temp_mix'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


END-OF-EXP

MAIN BAPU TYPE DECL CONTD


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = intarray
 TYPE RHS: ARRAY TYPE
 array:  int
2 TYPE HEADER
 TYPE LHS = strarray
 TYPE RHS: ARRAY TYPE
 array:  string
3 TYPE HEADER
 TYPE LHS = rectype
 TYPE RHS: RECORD TYPE
FIELD LIST DETAILS:
symbol t3 for type  string
symbol t2 for type stringlist
symbol t1 for type intlist
symbol hd for type foo
[END]
4 TYPE HEADER
 TYPE LHS = rectype2
 TYPE RHS: RECORD TYPE
FIELD LIST DETAILS:
symbol t2 for type stringlist2
symbol t1 for type intlist2
symbol hd for type foo2
[END]
[END TYPE LIST]


VARLIST - ALSO ADDED (corona)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:14, c:30): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:14, c:15): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:15): abcd

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:14, c:30): OpType=MUL

 Printing about Left SubExp of MUL now:
PRNSTAT-EXP: VAR EXP (l:14, c:22): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:22): zyngert

 Printing about Right SubExp of MUL now:
PRNSTAT-EXP: BOP EXP (l:14, c:37): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:33): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:33): now

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: BOP EXP (l:14, c:45): OpType=MINUS

 Printing about Left SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:39): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:39): then1

 Printing about Right SubExp of MINUS now:
PRNSTAT-EXP: VAR EXP (l:14, c:47): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:14, c:47): current

END-OF-EXP

VARLIST - ALSO ADDED (try_hit)
Expression associated with this var is as follows:
PRNSTAT-EXP: BOP EXP (l:12, c:18): OpType=PLUS

 Printing about Left SubExp of PLUS now:
PRNSTAT-EXP: INT EXP : 2
PRNSTAT-EXP: INT EXP (l:12, c:16)

 Printing about Right SubExp of PLUS now:
PRNSTAT-EXP: VAR EXP (l:12, c:20): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:12, c:20): elf

END-OF-EXP

MAIN BAPU TYPE DECL CONTD


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = foo
 TYPE RHS: ID TYPE
 id: bar
2 TYPE HEADER
 TYPE LHS = meguil
 TYPE RHS: ID TYPE
 id: baroda
3 TYPE HEADER
 TYPE LHS = lashid
 TYPE RHS: ID TYPE
 id: tamquan
4 TYPE HEADER
 TYPE LHS = b
 TYPE RHS: ID TYPE
 id: c
5 TYPE HEADER
 TYPE LHS = c
 TYPE RHS: ID TYPE
 id: b
6 TYPE HEADER
 TYPE LHS = testarray
 TYPE RHS: ARRAY TYPE
 array: hit
[END TYPE LIST]


3. EXPLITERAL (pure num): 0 (199, 17)
Discovered an EXPLITEral: 0

<BISON> EVALD a func call: treeLeaves(0)
1. SIMPLE VAR (l:202, c:6): mix
3. EXPLITERAL (lvalue): mix
1. SIMPLE VAR (l:202, c:12): trytmp
3. EXPLITERAL (lvalue): trytmp
Discovered an EXPLITEral: trytmp
EQUAL COMPARE EXP (l:202, c:10): mix = trytmp
In the EQ-COMP EXP, exp_left:
PRNSTAT-EXP: VAR EXP (l:202, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:202, c:12): trytmp

In the EQ-COMP EXP, exp_right:
PRNSTAT-EXP: VAR EXP (l:202, c:6): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:202, c:6): mix

Discovered an EXPLITEral: ( mix = trytmp )

<BISON> EVALD a func call: action_one()
<BISON> EVALD a func call: action_two()
<BISON> EVALD an if_then_decl: if ( mix = trytmp )  then ( action_one() ;
action_two() )
PRNSTAT-EXP: IF-EXP (l:202, c:1)

IF TEST CONDITION EXPRESSION:
PRNSTAT-EXP: BOP EXP (l:202, c:10): OpType=EQ(COMP)

 Printing about Left SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:202, c:6): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:202, c:6): mix

 Printing about Right SubExp of EQ(COMP) now:
PRNSTAT-EXP: VAR EXP (l:202, c:12): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:202, c:12): trytmp

IF THENBODY EXPRESSION:
PRNSTAT-EXP: SEQ-EXP (l:205, c:14)

BLOCK EXPRESSION STATEMENT IS AS FOLLOWS:

Expression List:
------------------
[EXPLIST] expression no. 1 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:205, c:4) of function 'action_two'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


[EXPLIST] expression no. 2 is as follows: 
PRNSTAT-EXP: FUNC-CALL (l:204, c:4) of function 'action_one'

Parameters passed to this function are as follows:

Expression List:
------------------
[end expression list]


[end expression list]


END OF IF-EXP

<BISON> EVALD a LET_decl (occurance 164,2): let
[Type]
false_type
in
[Body]
( treeLeaves(0) ;
if ( mix = trytmp )  then ( action_one() ;
action_two() ) )
end
[END]



(test) ROOT REACHED at : let
[Type]
false_type
in
[Body]
( treeLeaves(0) ;
if ( mix = trytmp )  then ( action_one() ;
action_two() ) )
end
[END]


