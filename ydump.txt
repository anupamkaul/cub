 A program to solve the 8-queens problem 3. EXPLITERAL (pure num): 8 (4, 14)
Discovered an EXPLITEral: 8

<BISON> EVALD a var_decl:  var N := 8
TEST: N
TEST (pos line IS WRONG): 4
GOING IN TYPE (FRST, FALSE) ;)

<BISON> EVALD a type_decl:  type intArray =  array  of  int
GOING IN TYPE FOR symbol intArray ;)
1. SIMPLE VAR (l:8, c:16): intArray
1. SIMPLE VAR (l:8, c:27): N
3. EXPLITERAL (lvalue): N
Discovered an EXPLITEral: N
3. SUBSCRIPT VAR (l:8, c:27): intArray[ N ]
PRNSTAT: A SUBSCRIPT VAR (l:8, c27)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:8, c:16): intArray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:8, c:27): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:8, c:27): N

3. EXPLITERAL (lvalue): intArray[ N ]
Discovered an EXPLITEral: intArray[ N ]

<BISON> EVALD a var_decl:  var row := intArray[ N ]
TEST: row
TEST (pos line IS WRONG): 8
VARLIST (LOOKS FIRST), ADDED TO NULL (row)
Expression associated with this var is as follows:
PRNSTAT-EXP: VAR EXP (l:8, c:27): (details below)
PRNSTAT: A SUBSCRIPT VAR (l:8, c27)
In subscript-var, the varname is as follows: 
PRNSTAT-VAR: SIMPLE VAR (l:8, c:16): intArray

In subscript-var, the expression is as follows: 
PRNSTAT-EXP: VAR EXP (l:8, c:27): (details below)
PRNSTAT-VAR: SIMPLE VAR (l:8, c:27): N

END-OF-EXP

MAIN TYPE DECL CONSTRUCT CONTD


NEW TYPE LIST DETAILS
1 TYPE HEADER
 TYPE LHS = intArray
 TYPE RHS: ARRAY TYPE
 array:  int
[END TYPE LIST]


VARLIST - ALSO ADDED (N)
Expression associated with this var is as follows:
PRNSTAT-EXP: INT EXP : 8
PRNSTAT-EXP: INT EXP (l:4, c:14)

END-OF-EXP

