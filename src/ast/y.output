Terminals unused in grammar

   nil_kwd
   dquote
   squote
   pure_str


Grammar

    0 $accept: tig_root $end

    1 tig_root: let_decl

    2 let_decl: let_kwd decls in_kwd expseq end_kwd

    3 decls: type_decls decls
    4      | func_decls decls
    5      | var_decl decls
    6      | func_decls
    7      | type_decls
    8      | var_decl

    9 type_decls: type_decls type_decl
   10           | false_type_kwd

   11 type_decl: type_kwd ident eq_op ty_rhs

   12 ty_rhs: ident
   13       | array_kwd of_kwd typeid
   14       | lbrace tyfields rbrace

   15 tyfields: tyfields comma ident colon typeid
   16         | ident colon typeid

   17 typeid: int_kwd
   18       | string_kwd
   19       | ident

   20 func_decls: func_decls func_decl
   21           | false_function_kwd

   22 func_decl: fn_kwd ident lparan rparan eq_op expseq
   23          | fn_kwd ident lparan tyfields rparan eq_op expseq
   24          | fn_kwd ident lparan rparan colon typeid eq_op expseq
   25          | fn_kwd ident lparan tyfields rparan colon typeid eq_op expseq

   26 var_decl: var_kwd ident asn_op expv
   27         | var_kwd ident asn_op array_defn
   28         | var_kwd ident colon typeid asn_op expv

   29 rec_defn: typeid lbrace rec_defn_param rbrace

   30 rec_defn_param: rec_defn_param comma ident eq_op expv
   31               | ident eq_op expv

   32 array_defn: sqLbrace expv sqRbrace typeid of_kwd expv

   33 expv: expliteral add_op expv
   34     | expliteral minus_op expv
   35     | expliteral mult_op expv
   36     | expliteral div_op expv
   37     | expliteral eq_op expv
   38     | expliteral not_eq expv
   39     | expliteral gr_op expv
   40     | expliteral le_op expv
   41     | expliteral gr_eq_op expv
   42     | expliteral le_eq_op expv
   43     | expliteral and_op expv
   44     | expliteral or_op expv
   45     | minus_op expv
   46     | expliteral

   47 expliteral: pure_num
   48           | lvalue
   49           | lparan expv rparan
   50           | func_call

   51 lvalue: lvalue sqLbrace expv sqRbrace
   52       | lvalue period ident
   53       | ident

   54 func_call: ident lparan rparan
   55          | ident lparan parameter_list rparan

   56 parameter_list: parameter_list comma expv
   57               | expv

   58 asn_exp: lvalue asn_op asn_exp
   59        | lvalue asn_op expv

   60 expseq: lparan rparan
   61       | lparan explist rparan

   62 explist: explist semicolon asn_exp
   63        | asn_exp
   64        | explist semicolon if_then_decl
   65        | if_then_decl
   66        | explist semicolon if_then_else_decl
   67        | if_then_else_decl
   68        | explist semicolon while_decl
   69        | while_decl
   70        | explist semicolon for_decl
   71        | for_decl
   72        | explist semicolon func_call
   73        | func_call
   74        | explist semicolon let_decl
   75        | let_decl
   76        | explist semicolon break_kwd
   77        | break_kwd
   78        | explist semicolon rec_defn
   79        | rec_defn

   80 if_then_decl: if_kwd expv then_kwd expseq

   81 while_decl: while_kwd expv do_kwd expseq

   82 for_decl: for_kwd ident asn_op expv to_kwd expv do_kwd expseq

   83 if_then_else_decl: if_kwd expv then_kwd expseq else_kwd expseq


Terminals, with rules where they appear

$end (0) 0
error (256)
let_kwd (258) 2
type_kwd (259) 11
var_kwd (260) 26 27 28
fn_kwd (261) 22 23 24 25
int_kwd (262) 17
string_kwd (263) 18
array_kwd (264) 13
of_kwd (265) 13 32
if_kwd (266) 80 83
then_kwd (267) 80 83
else_kwd (268) 83
in_kwd (269) 2
nil_kwd (270)
break_kwd (271) 76 77
while_kwd (272) 81
do_kwd (273) 81 82
for_kwd (274) 82
to_kwd (275) 82
end_kwd (276) 2
ident (277) 11 12 15 16 19 22 23 24 25 26 27 28 30 31 52 53 54 55 82
eq_op (278) 11 22 23 24 25 30 31 37
colon (279) 15 16 24 25 28
lbrace (280) 14 29
rbrace (281) 14 29
comma (282) 15 30 56
lparan (283) 22 23 24 25 49 54 55 60 61
rparan (284) 22 23 24 25 49 54 55 60 61
sqLbrace (285) 32 51
sqRbrace (286) 32 51
not_eq (287) 38
gr_op (288) 39
le_op (289) 40
le_eq_op (290) 42
gr_eq_op (291) 41
add_op (292) 33
minus_op (293) 34 45
mult_op (294) 35
div_op (295) 36
and_op (296) 43
or_op (297) 44
semicolon (298) 62 64 66 68 70 72 74 76 78
dquote (299)
squote (300)
asn_op (301) 26 27 28 58 59 82
pure_num (302) 47
pure_str (303)
period (304) 52
false_type_kwd (305) 10
false_function_kwd (306) 21


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
tig_root (53)
    on left: 1, on right: 0
let_decl (54)
    on left: 2, on right: 1 74 75
decls (55)
    on left: 3 4 5 6 7 8, on right: 2 3 4 5
type_decls (56)
    on left: 9 10, on right: 3 7 9
type_decl (57)
    on left: 11, on right: 9
ty_rhs (58)
    on left: 12 13 14, on right: 11
tyfields (59)
    on left: 15 16, on right: 14 15 23 25
typeid (60)
    on left: 17 18 19, on right: 13 15 16 24 25 28 29 32
func_decls (61)
    on left: 20 21, on right: 4 6 20
func_decl (62)
    on left: 22 23 24 25, on right: 20
var_decl (63)
    on left: 26 27 28, on right: 5 8
rec_defn (64)
    on left: 29, on right: 78 79
rec_defn_param (65)
    on left: 30 31, on right: 29 30
array_defn (66)
    on left: 32, on right: 27
expv (67)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46, on right: 26
    28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 49 51 56 57
    59 80 81 82 83
expliteral (68)
    on left: 47 48 49 50, on right: 33 34 35 36 37 38 39 40 41 42 43
    44 46
lvalue (69)
    on left: 51 52 53, on right: 48 51 52 58 59
func_call (70)
    on left: 54 55, on right: 50 72 73
parameter_list (71)
    on left: 56 57, on right: 55 56
asn_exp (72)
    on left: 58 59, on right: 58 62 63
expseq (73)
    on left: 60 61, on right: 2 22 23 24 25 80 81 82 83
explist (74)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79,
    on right: 61 62 64 66 68 70 72 74 76 78
if_then_decl (75)
    on left: 80, on right: 64 65
while_decl (76)
    on left: 81, on right: 68 69
for_decl (77)
    on left: 82, on right: 70 71
if_then_else_decl (78)
    on left: 83, on right: 66 67


State 0

    0 $accept: . tig_root $end

    let_kwd  shift, and go to state 1

    tig_root  go to state 2
    let_decl  go to state 3


State 1

    2 let_decl: let_kwd . decls in_kwd expseq end_kwd

    var_kwd             shift, and go to state 4
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    decls       go to state 7
    type_decls  go to state 8
    func_decls  go to state 9
    var_decl    go to state 10


State 2

    0 $accept: tig_root . $end

    $end  shift, and go to state 11


State 3

    1 tig_root: let_decl .

    $default  reduce using rule 1 (tig_root)


State 4

   26 var_decl: var_kwd . ident asn_op expv
   27         | var_kwd . ident asn_op array_defn
   28         | var_kwd . ident colon typeid asn_op expv

    ident  shift, and go to state 12


State 5

   10 type_decls: false_type_kwd .

    $default  reduce using rule 10 (type_decls)


State 6

   21 func_decls: false_function_kwd .

    $default  reduce using rule 21 (func_decls)


State 7

    2 let_decl: let_kwd decls . in_kwd expseq end_kwd

    in_kwd  shift, and go to state 13


State 8

    3 decls: type_decls . decls
    7      | type_decls .
    9 type_decls: type_decls . type_decl

    type_kwd            shift, and go to state 14
    var_kwd             shift, and go to state 4
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    $default  reduce using rule 7 (decls)

    decls       go to state 15
    type_decls  go to state 8
    type_decl   go to state 16
    func_decls  go to state 9
    var_decl    go to state 10


State 9

    4 decls: func_decls . decls
    6      | func_decls .
   20 func_decls: func_decls . func_decl

    var_kwd             shift, and go to state 4
    fn_kwd              shift, and go to state 17
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    $default  reduce using rule 6 (decls)

    decls       go to state 18
    type_decls  go to state 8
    func_decls  go to state 9
    func_decl   go to state 19
    var_decl    go to state 10


State 10

    5 decls: var_decl . decls
    8      | var_decl .

    var_kwd             shift, and go to state 4
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    $default  reduce using rule 8 (decls)

    decls       go to state 20
    type_decls  go to state 8
    func_decls  go to state 9
    var_decl    go to state 10


State 11

    0 $accept: tig_root $end .

    $default  accept


State 12

   26 var_decl: var_kwd ident . asn_op expv
   27         | var_kwd ident . asn_op array_defn
   28         | var_kwd ident . colon typeid asn_op expv

    colon   shift, and go to state 21
    asn_op  shift, and go to state 22


State 13

    2 let_decl: let_kwd decls in_kwd . expseq end_kwd

    lparan  shift, and go to state 23

    expseq  go to state 24


State 14

   11 type_decl: type_kwd . ident eq_op ty_rhs

    ident  shift, and go to state 25


State 15

    3 decls: type_decls decls .

    $default  reduce using rule 3 (decls)


State 16

    9 type_decls: type_decls type_decl .

    $default  reduce using rule 9 (type_decls)


State 17

   22 func_decl: fn_kwd . ident lparan rparan eq_op expseq
   23          | fn_kwd . ident lparan tyfields rparan eq_op expseq
   24          | fn_kwd . ident lparan rparan colon typeid eq_op expseq
   25          | fn_kwd . ident lparan tyfields rparan colon typeid eq_op expseq

    ident  shift, and go to state 26


State 18

    4 decls: func_decls decls .

    $default  reduce using rule 4 (decls)


State 19

   20 func_decls: func_decls func_decl .

    $default  reduce using rule 20 (func_decls)


State 20

    5 decls: var_decl decls .

    $default  reduce using rule 5 (decls)


State 21

   28 var_decl: var_kwd ident colon . typeid asn_op expv

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 30


State 22

   26 var_decl: var_kwd ident asn_op . expv
   27         | var_kwd ident asn_op . array_defn

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    sqLbrace  shift, and go to state 33
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    array_defn  go to state 36
    expv        go to state 37
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 23

   60 expseq: lparan . rparan
   61       | lparan . explist rparan

    let_kwd     shift, and go to state 1
    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    if_kwd      shift, and go to state 41
    break_kwd   shift, and go to state 42
    while_kwd   shift, and go to state 43
    for_kwd     shift, and go to state 44
    ident       shift, and go to state 45
    rparan      shift, and go to state 46

    let_decl           go to state 47
    typeid             go to state 48
    rec_defn           go to state 49
    lvalue             go to state 50
    func_call          go to state 51
    asn_exp            go to state 52
    explist            go to state 53
    if_then_decl       go to state 54
    while_decl         go to state 55
    for_decl           go to state 56
    if_then_else_decl  go to state 57


State 24

    2 let_decl: let_kwd decls in_kwd expseq . end_kwd

    end_kwd  shift, and go to state 58


State 25

   11 type_decl: type_kwd ident . eq_op ty_rhs

    eq_op  shift, and go to state 59


State 26

   22 func_decl: fn_kwd ident . lparan rparan eq_op expseq
   23          | fn_kwd ident . lparan tyfields rparan eq_op expseq
   24          | fn_kwd ident . lparan rparan colon typeid eq_op expseq
   25          | fn_kwd ident . lparan tyfields rparan colon typeid eq_op expseq

    lparan  shift, and go to state 60


State 27

   17 typeid: int_kwd .

    $default  reduce using rule 17 (typeid)


State 28

   18 typeid: string_kwd .

    $default  reduce using rule 18 (typeid)


State 29

   19 typeid: ident .

    $default  reduce using rule 19 (typeid)


State 30

   28 var_decl: var_kwd ident colon typeid . asn_op expv

    asn_op  shift, and go to state 61


State 31

   53 lvalue: ident .
   54 func_call: ident . lparan rparan
   55          | ident . lparan parameter_list rparan

    lparan  shift, and go to state 62

    $default  reduce using rule 53 (lvalue)


State 32

   49 expliteral: lparan . expv rparan

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 63
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 33

   32 array_defn: sqLbrace . expv sqRbrace typeid of_kwd expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 64
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 34

   45 expv: minus_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 65
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 35

   47 expliteral: pure_num .

    $default  reduce using rule 47 (expliteral)


State 36

   27 var_decl: var_kwd ident asn_op array_defn .

    $default  reduce using rule 27 (var_decl)


State 37

   26 var_decl: var_kwd ident asn_op expv .

    $default  reduce using rule 26 (var_decl)


State 38

   33 expv: expliteral . add_op expv
   34     | expliteral . minus_op expv
   35     | expliteral . mult_op expv
   36     | expliteral . div_op expv
   37     | expliteral . eq_op expv
   38     | expliteral . not_eq expv
   39     | expliteral . gr_op expv
   40     | expliteral . le_op expv
   41     | expliteral . gr_eq_op expv
   42     | expliteral . le_eq_op expv
   43     | expliteral . and_op expv
   44     | expliteral . or_op expv
   46     | expliteral .

    eq_op     shift, and go to state 66
    not_eq    shift, and go to state 67
    gr_op     shift, and go to state 68
    le_op     shift, and go to state 69
    le_eq_op  shift, and go to state 70
    gr_eq_op  shift, and go to state 71
    add_op    shift, and go to state 72
    minus_op  shift, and go to state 73
    mult_op   shift, and go to state 74
    div_op    shift, and go to state 75
    and_op    shift, and go to state 76
    or_op     shift, and go to state 77

    $default  reduce using rule 46 (expv)


State 39

   48 expliteral: lvalue .
   51 lvalue: lvalue . sqLbrace expv sqRbrace
   52       | lvalue . period ident

    sqLbrace  shift, and go to state 78
    period    shift, and go to state 79

    $default  reduce using rule 48 (expliteral)


State 40

   50 expliteral: func_call .

    $default  reduce using rule 50 (expliteral)


State 41

   80 if_then_decl: if_kwd . expv then_kwd expseq
   83 if_then_else_decl: if_kwd . expv then_kwd expseq else_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 80
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 42

   77 explist: break_kwd .

    $default  reduce using rule 77 (explist)


State 43

   81 while_decl: while_kwd . expv do_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 81
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 44

   82 for_decl: for_kwd . ident asn_op expv to_kwd expv do_kwd expseq

    ident  shift, and go to state 82


State 45

   19 typeid: ident .
   53 lvalue: ident .
   54 func_call: ident . lparan rparan
   55          | ident . lparan parameter_list rparan

    lparan  shift, and go to state 62

    lbrace    reduce using rule 19 (typeid)
    $default  reduce using rule 53 (lvalue)


State 46

   60 expseq: lparan rparan .

    $default  reduce using rule 60 (expseq)


State 47

   75 explist: let_decl .

    $default  reduce using rule 75 (explist)


State 48

   29 rec_defn: typeid . lbrace rec_defn_param rbrace

    lbrace  shift, and go to state 83


State 49

   79 explist: rec_defn .

    $default  reduce using rule 79 (explist)


State 50

   51 lvalue: lvalue . sqLbrace expv sqRbrace
   52       | lvalue . period ident
   58 asn_exp: lvalue . asn_op asn_exp
   59        | lvalue . asn_op expv

    sqLbrace  shift, and go to state 78
    asn_op    shift, and go to state 84
    period    shift, and go to state 79


State 51

   73 explist: func_call .

    $default  reduce using rule 73 (explist)


State 52

   63 explist: asn_exp .

    $default  reduce using rule 63 (explist)


State 53

   61 expseq: lparan explist . rparan
   62 explist: explist . semicolon asn_exp
   64        | explist . semicolon if_then_decl
   66        | explist . semicolon if_then_else_decl
   68        | explist . semicolon while_decl
   70        | explist . semicolon for_decl
   72        | explist . semicolon func_call
   74        | explist . semicolon let_decl
   76        | explist . semicolon break_kwd
   78        | explist . semicolon rec_defn

    rparan     shift, and go to state 85
    semicolon  shift, and go to state 86


State 54

   65 explist: if_then_decl .

    $default  reduce using rule 65 (explist)


State 55

   69 explist: while_decl .

    $default  reduce using rule 69 (explist)


State 56

   71 explist: for_decl .

    $default  reduce using rule 71 (explist)


State 57

   67 explist: if_then_else_decl .

    $default  reduce using rule 67 (explist)


State 58

    2 let_decl: let_kwd decls in_kwd expseq end_kwd .

    $default  reduce using rule 2 (let_decl)


State 59

   11 type_decl: type_kwd ident eq_op . ty_rhs

    array_kwd  shift, and go to state 87
    ident      shift, and go to state 88
    lbrace     shift, and go to state 89

    ty_rhs  go to state 90


State 60

   22 func_decl: fn_kwd ident lparan . rparan eq_op expseq
   23          | fn_kwd ident lparan . tyfields rparan eq_op expseq
   24          | fn_kwd ident lparan . rparan colon typeid eq_op expseq
   25          | fn_kwd ident lparan . tyfields rparan colon typeid eq_op expseq

    ident   shift, and go to state 91
    rparan  shift, and go to state 92

    tyfields  go to state 93


State 61

   28 var_decl: var_kwd ident colon typeid asn_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 94
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 62

   54 func_call: ident lparan . rparan
   55          | ident lparan . parameter_list rparan

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    rparan    shift, and go to state 95
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv            go to state 96
    expliteral      go to state 38
    lvalue          go to state 39
    func_call       go to state 40
    parameter_list  go to state 97


State 63

   49 expliteral: lparan expv . rparan

    rparan  shift, and go to state 98


State 64

   32 array_defn: sqLbrace expv . sqRbrace typeid of_kwd expv

    sqRbrace  shift, and go to state 99


State 65

   45 expv: minus_op expv .

    $default  reduce using rule 45 (expv)


State 66

   37 expv: expliteral eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 100
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 67

   38 expv: expliteral not_eq . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 101
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 68

   39 expv: expliteral gr_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 102
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 69

   40 expv: expliteral le_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 103
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 70

   42 expv: expliteral le_eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 104
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 71

   41 expv: expliteral gr_eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 105
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 72

   33 expv: expliteral add_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 106
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 73

   34 expv: expliteral minus_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 107
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 74

   35 expv: expliteral mult_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 108
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 75

   36 expv: expliteral div_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 109
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 76

   43 expv: expliteral and_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 110
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 77

   44 expv: expliteral or_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 111
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 78

   51 lvalue: lvalue sqLbrace . expv sqRbrace

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 112
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 79

   52 lvalue: lvalue period . ident

    ident  shift, and go to state 113


State 80

   80 if_then_decl: if_kwd expv . then_kwd expseq
   83 if_then_else_decl: if_kwd expv . then_kwd expseq else_kwd expseq

    then_kwd  shift, and go to state 114


State 81

   81 while_decl: while_kwd expv . do_kwd expseq

    do_kwd  shift, and go to state 115


State 82

   82 for_decl: for_kwd ident . asn_op expv to_kwd expv do_kwd expseq

    asn_op  shift, and go to state 116


State 83

   29 rec_defn: typeid lbrace . rec_defn_param rbrace

    ident  shift, and go to state 117

    rec_defn_param  go to state 118


State 84

   58 asn_exp: lvalue asn_op . asn_exp
   59        | lvalue asn_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 119
    expliteral  go to state 38
    lvalue      go to state 120
    func_call   go to state 40
    asn_exp     go to state 121


State 85

   61 expseq: lparan explist rparan .

    $default  reduce using rule 61 (expseq)


State 86

   62 explist: explist semicolon . asn_exp
   64        | explist semicolon . if_then_decl
   66        | explist semicolon . if_then_else_decl
   68        | explist semicolon . while_decl
   70        | explist semicolon . for_decl
   72        | explist semicolon . func_call
   74        | explist semicolon . let_decl
   76        | explist semicolon . break_kwd
   78        | explist semicolon . rec_defn

    let_kwd     shift, and go to state 1
    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    if_kwd      shift, and go to state 41
    break_kwd   shift, and go to state 122
    while_kwd   shift, and go to state 43
    for_kwd     shift, and go to state 44
    ident       shift, and go to state 45

    let_decl           go to state 123
    typeid             go to state 48
    rec_defn           go to state 124
    lvalue             go to state 50
    func_call          go to state 125
    asn_exp            go to state 126
    if_then_decl       go to state 127
    while_decl         go to state 128
    for_decl           go to state 129
    if_then_else_decl  go to state 130


State 87

   13 ty_rhs: array_kwd . of_kwd typeid

    of_kwd  shift, and go to state 131


State 88

   12 ty_rhs: ident .

    $default  reduce using rule 12 (ty_rhs)


State 89

   14 ty_rhs: lbrace . tyfields rbrace

    ident  shift, and go to state 91

    tyfields  go to state 132


State 90

   11 type_decl: type_kwd ident eq_op ty_rhs .

    $default  reduce using rule 11 (type_decl)


State 91

   16 tyfields: ident . colon typeid

    colon  shift, and go to state 133


State 92

   22 func_decl: fn_kwd ident lparan rparan . eq_op expseq
   24          | fn_kwd ident lparan rparan . colon typeid eq_op expseq

    eq_op  shift, and go to state 134
    colon  shift, and go to state 135


State 93

   15 tyfields: tyfields . comma ident colon typeid
   23 func_decl: fn_kwd ident lparan tyfields . rparan eq_op expseq
   25          | fn_kwd ident lparan tyfields . rparan colon typeid eq_op expseq

    comma   shift, and go to state 136
    rparan  shift, and go to state 137


State 94

   28 var_decl: var_kwd ident colon typeid asn_op expv .

    $default  reduce using rule 28 (var_decl)


State 95

   54 func_call: ident lparan rparan .

    $default  reduce using rule 54 (func_call)


State 96

   57 parameter_list: expv .

    $default  reduce using rule 57 (parameter_list)


State 97

   55 func_call: ident lparan parameter_list . rparan
   56 parameter_list: parameter_list . comma expv

    comma   shift, and go to state 138
    rparan  shift, and go to state 139


State 98

   49 expliteral: lparan expv rparan .

    $default  reduce using rule 49 (expliteral)


State 99

   32 array_defn: sqLbrace expv sqRbrace . typeid of_kwd expv

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 140


State 100

   37 expv: expliteral eq_op expv .

    $default  reduce using rule 37 (expv)


State 101

   38 expv: expliteral not_eq expv .

    $default  reduce using rule 38 (expv)


State 102

   39 expv: expliteral gr_op expv .

    $default  reduce using rule 39 (expv)


State 103

   40 expv: expliteral le_op expv .

    $default  reduce using rule 40 (expv)


State 104

   42 expv: expliteral le_eq_op expv .

    $default  reduce using rule 42 (expv)


State 105

   41 expv: expliteral gr_eq_op expv .

    $default  reduce using rule 41 (expv)


State 106

   33 expv: expliteral add_op expv .

    $default  reduce using rule 33 (expv)


State 107

   34 expv: expliteral minus_op expv .

    $default  reduce using rule 34 (expv)


State 108

   35 expv: expliteral mult_op expv .

    $default  reduce using rule 35 (expv)


State 109

   36 expv: expliteral div_op expv .

    $default  reduce using rule 36 (expv)


State 110

   43 expv: expliteral and_op expv .

    $default  reduce using rule 43 (expv)


State 111

   44 expv: expliteral or_op expv .

    $default  reduce using rule 44 (expv)


State 112

   51 lvalue: lvalue sqLbrace expv . sqRbrace

    sqRbrace  shift, and go to state 141


State 113

   52 lvalue: lvalue period ident .

    $default  reduce using rule 52 (lvalue)


State 114

   80 if_then_decl: if_kwd expv then_kwd . expseq
   83 if_then_else_decl: if_kwd expv then_kwd . expseq else_kwd expseq

    lparan  shift, and go to state 23

    expseq  go to state 142


State 115

   81 while_decl: while_kwd expv do_kwd . expseq

    lparan  shift, and go to state 23

    expseq  go to state 143


State 116

   82 for_decl: for_kwd ident asn_op . expv to_kwd expv do_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 144
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 117

   31 rec_defn_param: ident . eq_op expv

    eq_op  shift, and go to state 145


State 118

   29 rec_defn: typeid lbrace rec_defn_param . rbrace
   30 rec_defn_param: rec_defn_param . comma ident eq_op expv

    rbrace  shift, and go to state 146
    comma   shift, and go to state 147


State 119

   59 asn_exp: lvalue asn_op expv .

    $default  reduce using rule 59 (asn_exp)


State 120

   48 expliteral: lvalue .
   51 lvalue: lvalue . sqLbrace expv sqRbrace
   52       | lvalue . period ident
   58 asn_exp: lvalue . asn_op asn_exp
   59        | lvalue . asn_op expv

    sqLbrace  shift, and go to state 78
    asn_op    shift, and go to state 84
    period    shift, and go to state 79

    $default  reduce using rule 48 (expliteral)


State 121

   58 asn_exp: lvalue asn_op asn_exp .

    $default  reduce using rule 58 (asn_exp)


State 122

   76 explist: explist semicolon break_kwd .

    $default  reduce using rule 76 (explist)


State 123

   74 explist: explist semicolon let_decl .

    $default  reduce using rule 74 (explist)


State 124

   78 explist: explist semicolon rec_defn .

    $default  reduce using rule 78 (explist)


State 125

   72 explist: explist semicolon func_call .

    $default  reduce using rule 72 (explist)


State 126

   62 explist: explist semicolon asn_exp .

    $default  reduce using rule 62 (explist)


State 127

   64 explist: explist semicolon if_then_decl .

    $default  reduce using rule 64 (explist)


State 128

   68 explist: explist semicolon while_decl .

    $default  reduce using rule 68 (explist)


State 129

   70 explist: explist semicolon for_decl .

    $default  reduce using rule 70 (explist)


State 130

   66 explist: explist semicolon if_then_else_decl .

    $default  reduce using rule 66 (explist)


State 131

   13 ty_rhs: array_kwd of_kwd . typeid

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 148


State 132

   14 ty_rhs: lbrace tyfields . rbrace
   15 tyfields: tyfields . comma ident colon typeid

    rbrace  shift, and go to state 149
    comma   shift, and go to state 136


State 133

   16 tyfields: ident colon . typeid

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 150


State 134

   22 func_decl: fn_kwd ident lparan rparan eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 151


State 135

   24 func_decl: fn_kwd ident lparan rparan colon . typeid eq_op expseq

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 152


State 136

   15 tyfields: tyfields comma . ident colon typeid

    ident  shift, and go to state 153


State 137

   23 func_decl: fn_kwd ident lparan tyfields rparan . eq_op expseq
   25          | fn_kwd ident lparan tyfields rparan . colon typeid eq_op expseq

    eq_op  shift, and go to state 154
    colon  shift, and go to state 155


State 138

   56 parameter_list: parameter_list comma . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 156
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 139

   55 func_call: ident lparan parameter_list rparan .

    $default  reduce using rule 55 (func_call)


State 140

   32 array_defn: sqLbrace expv sqRbrace typeid . of_kwd expv

    of_kwd  shift, and go to state 157


State 141

   51 lvalue: lvalue sqLbrace expv sqRbrace .

    $default  reduce using rule 51 (lvalue)


State 142

   80 if_then_decl: if_kwd expv then_kwd expseq .
   83 if_then_else_decl: if_kwd expv then_kwd expseq . else_kwd expseq

    else_kwd  shift, and go to state 158

    $default  reduce using rule 80 (if_then_decl)


State 143

   81 while_decl: while_kwd expv do_kwd expseq .

    $default  reduce using rule 81 (while_decl)


State 144

   82 for_decl: for_kwd ident asn_op expv . to_kwd expv do_kwd expseq

    to_kwd  shift, and go to state 159


State 145

   31 rec_defn_param: ident eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 160
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 146

   29 rec_defn: typeid lbrace rec_defn_param rbrace .

    $default  reduce using rule 29 (rec_defn)


State 147

   30 rec_defn_param: rec_defn_param comma . ident eq_op expv

    ident  shift, and go to state 161


State 148

   13 ty_rhs: array_kwd of_kwd typeid .

    $default  reduce using rule 13 (ty_rhs)


State 149

   14 ty_rhs: lbrace tyfields rbrace .

    $default  reduce using rule 14 (ty_rhs)


State 150

   16 tyfields: ident colon typeid .

    $default  reduce using rule 16 (tyfields)


State 151

   22 func_decl: fn_kwd ident lparan rparan eq_op expseq .

    $default  reduce using rule 22 (func_decl)


State 152

   24 func_decl: fn_kwd ident lparan rparan colon typeid . eq_op expseq

    eq_op  shift, and go to state 162


State 153

   15 tyfields: tyfields comma ident . colon typeid

    colon  shift, and go to state 163


State 154

   23 func_decl: fn_kwd ident lparan tyfields rparan eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 164


State 155

   25 func_decl: fn_kwd ident lparan tyfields rparan colon . typeid eq_op expseq

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 165


State 156

   56 parameter_list: parameter_list comma expv .

    $default  reduce using rule 56 (parameter_list)


State 157

   32 array_defn: sqLbrace expv sqRbrace typeid of_kwd . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 166
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 158

   83 if_then_else_decl: if_kwd expv then_kwd expseq else_kwd . expseq

    lparan  shift, and go to state 23

    expseq  go to state 167


State 159

   82 for_decl: for_kwd ident asn_op expv to_kwd . expv do_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 168
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 160

   31 rec_defn_param: ident eq_op expv .

    $default  reduce using rule 31 (rec_defn_param)


State 161

   30 rec_defn_param: rec_defn_param comma ident . eq_op expv

    eq_op  shift, and go to state 169


State 162

   24 func_decl: fn_kwd ident lparan rparan colon typeid eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 170


State 163

   15 tyfields: tyfields comma ident colon . typeid

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 171


State 164

   23 func_decl: fn_kwd ident lparan tyfields rparan eq_op expseq .

    $default  reduce using rule 23 (func_decl)


State 165

   25 func_decl: fn_kwd ident lparan tyfields rparan colon typeid . eq_op expseq

    eq_op  shift, and go to state 172


State 166

   32 array_defn: sqLbrace expv sqRbrace typeid of_kwd expv .

    $default  reduce using rule 32 (array_defn)


State 167

   83 if_then_else_decl: if_kwd expv then_kwd expseq else_kwd expseq .

    $default  reduce using rule 83 (if_then_else_decl)


State 168

   82 for_decl: for_kwd ident asn_op expv to_kwd expv . do_kwd expseq

    do_kwd  shift, and go to state 173


State 169

   30 rec_defn_param: rec_defn_param comma ident eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35

    expv        go to state 174
    expliteral  go to state 38
    lvalue      go to state 39
    func_call   go to state 40


State 170

   24 func_decl: fn_kwd ident lparan rparan colon typeid eq_op expseq .

    $default  reduce using rule 24 (func_decl)


State 171

   15 tyfields: tyfields comma ident colon typeid .

    $default  reduce using rule 15 (tyfields)


State 172

   25 func_decl: fn_kwd ident lparan tyfields rparan colon typeid eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 175


State 173

   82 for_decl: for_kwd ident asn_op expv to_kwd expv do_kwd . expseq

    lparan  shift, and go to state 23

    expseq  go to state 176


State 174

   30 rec_defn_param: rec_defn_param comma ident eq_op expv .

    $default  reduce using rule 30 (rec_defn_param)


State 175

   25 func_decl: fn_kwd ident lparan tyfields rparan colon typeid eq_op expseq .

    $default  reduce using rule 25 (func_decl)


State 176

   82 for_decl: for_kwd ident asn_op expv to_kwd expv do_kwd expseq .

    $default  reduce using rule 82 (for_decl)
