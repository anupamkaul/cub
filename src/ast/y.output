Terminals unused in grammar

   nil_kwd
   dquote
   squote


Rules useless in parser due to conflicts

   74 explist: explist semicolon func_call
   75        | func_call


State 53 conflicts: 2 reduce/reduce
State 90 conflicts: 5 reduce/reduce
State 128 conflicts: 2 reduce/reduce


Grammar

    0 $accept: tig_root $end

    1 tig_root: let_decl

    2 let_decl: let_kwd decls in_kwd expseq end_kwd

    3 decls: type_decls decls
    4      | func_decls decls
    5      | var_decl decls
    6      | func_decls
    7      | type_decls
    8      | var_decl

    9 type_decls: type_decls type_decl
   10           | false_type_kwd

   11 type_decl: type_kwd ident eq_op ty_rhs

   12 ty_rhs: ident
   13       | array_kwd of_kwd typeid
   14       | lbrace tyfields rbrace
   15       | typeid

   16 tyfields: tyfields comma ident colon typeid
   17         | ident colon typeid

   18 typeid: int_kwd
   19       | string_kwd
   20       | ident

   21 func_decls: func_decls func_decl
   22           | false_function_kwd

   23 func_decl: fn_kwd ident lparan rparan eq_op expseq
   24          | fn_kwd ident lparan tyfields rparan eq_op expseq
   25          | fn_kwd ident lparan rparan colon typeid eq_op expseq
   26          | fn_kwd ident lparan tyfields rparan colon typeid eq_op expseq

   27 var_decl: var_kwd ident asn_op expv
   28         | var_kwd ident asn_op array_defn
   29         | var_kwd ident colon typeid asn_op expv

   30 rec_defn: typeid lbrace rec_defn_param rbrace

   31 rec_defn_param: rec_defn_param comma ident eq_op expv
   32               | ident eq_op expv

   33 array_defn: sqLbrace expv sqRbrace typeid of_kwd expv

   34 expv: expliteral add_op expv
   35     | expliteral minus_op expv
   36     | expliteral mult_op expv
   37     | expliteral div_op expv
   38     | expliteral eq_op expv
   39     | expliteral not_eq expv
   40     | expliteral gr_op expv
   41     | expliteral le_op expv
   42     | expliteral gr_eq_op expv
   43     | expliteral le_eq_op expv
   44     | expliteral and_op expv
   45     | expliteral or_op expv
   46     | minus_op expv
   47     | expliteral

   48 expliteral: pure_num
   49           | pure_str
   50           | lvalue
   51           | lparan expv rparan
   52           | func_call

   53 lvalue: lvalue sqLbrace expv sqRbrace
   54       | lvalue period ident
   55       | ident

   56 func_call: ident lparan rparan
   57          | ident lparan parameter_list rparan

   58 parameter_list: parameter_list comma expv
   59               | expv

   60 asn_exp: lvalue asn_op asn_exp
   61        | lvalue asn_op expv

   62 expseq: lparan rparan
   63       | lparan explist rparan

   64 explist: explist semicolon asn_exp
   65        | asn_exp
   66        | explist semicolon if_then_decl
   67        | if_then_decl
   68        | explist semicolon if_then_else_decl
   69        | if_then_else_decl
   70        | explist semicolon while_decl
   71        | while_decl
   72        | explist semicolon for_decl
   73        | for_decl
   74        | explist semicolon func_call
   75        | func_call
   76        | explist semicolon let_decl
   77        | let_decl
   78        | explist semicolon break_kwd
   79        | break_kwd
   80        | explist semicolon rec_defn
   81        | rec_defn
   82        | explist semicolon expv
   83        | expv

   84 if_then_decl: if_kwd expv then_kwd expseq

   85 while_decl: while_kwd expv do_kwd expseq

   86 for_decl: for_kwd ident asn_op expv to_kwd expv do_kwd expseq

   87 if_then_else_decl: if_kwd expv then_kwd expseq else_kwd expseq


Terminals, with rules where they appear

$end (0) 0
error (256)
let_kwd (258) 2
type_kwd (259) 11
var_kwd (260) 27 28 29
fn_kwd (261) 23 24 25 26
int_kwd (262) 18
string_kwd (263) 19
array_kwd (264) 13
of_kwd (265) 13 33
if_kwd (266) 84 87
then_kwd (267) 84 87
else_kwd (268) 87
in_kwd (269) 2
nil_kwd (270)
break_kwd (271) 78 79
while_kwd (272) 85
do_kwd (273) 85 86
for_kwd (274) 86
to_kwd (275) 86
end_kwd (276) 2
ident (277) 11 12 16 17 20 23 24 25 26 27 28 29 31 32 54 55 56 57 86
eq_op (278) 11 23 24 25 26 31 32 38
colon (279) 16 17 25 26 29
lbrace (280) 14 30
rbrace (281) 14 30
comma (282) 16 31 58
lparan (283) 23 24 25 26 51 56 57 62 63
rparan (284) 23 24 25 26 51 56 57 62 63
sqLbrace (285) 33 53
sqRbrace (286) 33 53
not_eq (287) 39
gr_op (288) 40
le_op (289) 41
le_eq_op (290) 43
gr_eq_op (291) 42
add_op (292) 34
minus_op (293) 35 46
mult_op (294) 36
div_op (295) 37
and_op (296) 44
or_op (297) 45
semicolon (298) 64 66 68 70 72 74 76 78 80 82
dquote (299)
squote (300)
asn_op (301) 27 28 29 60 61 86
pure_num (302) 48
pure_str (303) 49
period (304) 54
false_type_kwd (305) 10
false_function_kwd (306) 22


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
tig_root (53)
    on left: 1, on right: 0
let_decl (54)
    on left: 2, on right: 1 76 77
decls (55)
    on left: 3 4 5 6 7 8, on right: 2 3 4 5
type_decls (56)
    on left: 9 10, on right: 3 7 9
type_decl (57)
    on left: 11, on right: 9
ty_rhs (58)
    on left: 12 13 14 15, on right: 11
tyfields (59)
    on left: 16 17, on right: 14 16 24 26
typeid (60)
    on left: 18 19 20, on right: 13 15 16 17 25 26 29 30 33
func_decls (61)
    on left: 21 22, on right: 4 6 21
func_decl (62)
    on left: 23 24 25 26, on right: 21
var_decl (63)
    on left: 27 28 29, on right: 5 8
rec_defn (64)
    on left: 30, on right: 80 81
rec_defn_param (65)
    on left: 31 32, on right: 30 31
array_defn (66)
    on left: 33, on right: 28
expv (67)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47, on right: 27
    29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 51 53 58 59
    61 82 83 84 85 86 87
expliteral (68)
    on left: 48 49 50 51 52, on right: 34 35 36 37 38 39 40 41 42 43
    44 45 47
lvalue (69)
    on left: 53 54 55, on right: 50 53 54 60 61
func_call (70)
    on left: 56 57, on right: 52 74 75
parameter_list (71)
    on left: 58 59, on right: 57 58
asn_exp (72)
    on left: 60 61, on right: 60 64 65
expseq (73)
    on left: 62 63, on right: 2 23 24 25 26 84 85 86 87
explist (74)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83, on right: 63 64 66 68 70 72 74 76 78 80 82
if_then_decl (75)
    on left: 84, on right: 66 67
while_decl (76)
    on left: 85, on right: 70 71
for_decl (77)
    on left: 86, on right: 72 73
if_then_else_decl (78)
    on left: 87, on right: 68 69


State 0

    0 $accept: . tig_root $end

    let_kwd  shift, and go to state 1

    tig_root  go to state 2
    let_decl  go to state 3


State 1

    2 let_decl: let_kwd . decls in_kwd expseq end_kwd

    var_kwd             shift, and go to state 4
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    decls       go to state 7
    type_decls  go to state 8
    func_decls  go to state 9
    var_decl    go to state 10


State 2

    0 $accept: tig_root . $end

    $end  shift, and go to state 11


State 3

    1 tig_root: let_decl .

    $default  reduce using rule 1 (tig_root)


State 4

   27 var_decl: var_kwd . ident asn_op expv
   28         | var_kwd . ident asn_op array_defn
   29         | var_kwd . ident colon typeid asn_op expv

    ident  shift, and go to state 12


State 5

   10 type_decls: false_type_kwd .

    $default  reduce using rule 10 (type_decls)


State 6

   22 func_decls: false_function_kwd .

    $default  reduce using rule 22 (func_decls)


State 7

    2 let_decl: let_kwd decls . in_kwd expseq end_kwd

    in_kwd  shift, and go to state 13


State 8

    3 decls: type_decls . decls
    7      | type_decls .
    9 type_decls: type_decls . type_decl

    type_kwd            shift, and go to state 14
    var_kwd             shift, and go to state 4
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    $default  reduce using rule 7 (decls)

    decls       go to state 15
    type_decls  go to state 8
    type_decl   go to state 16
    func_decls  go to state 9
    var_decl    go to state 10


State 9

    4 decls: func_decls . decls
    6      | func_decls .
   21 func_decls: func_decls . func_decl

    var_kwd             shift, and go to state 4
    fn_kwd              shift, and go to state 17
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    $default  reduce using rule 6 (decls)

    decls       go to state 18
    type_decls  go to state 8
    func_decls  go to state 9
    func_decl   go to state 19
    var_decl    go to state 10


State 10

    5 decls: var_decl . decls
    8      | var_decl .

    var_kwd             shift, and go to state 4
    false_type_kwd      shift, and go to state 5
    false_function_kwd  shift, and go to state 6

    $default  reduce using rule 8 (decls)

    decls       go to state 20
    type_decls  go to state 8
    func_decls  go to state 9
    var_decl    go to state 10


State 11

    0 $accept: tig_root $end .

    $default  accept


State 12

   27 var_decl: var_kwd ident . asn_op expv
   28         | var_kwd ident . asn_op array_defn
   29         | var_kwd ident . colon typeid asn_op expv

    colon   shift, and go to state 21
    asn_op  shift, and go to state 22


State 13

    2 let_decl: let_kwd decls in_kwd . expseq end_kwd

    lparan  shift, and go to state 23

    expseq  go to state 24


State 14

   11 type_decl: type_kwd . ident eq_op ty_rhs

    ident  shift, and go to state 25


State 15

    3 decls: type_decls decls .

    $default  reduce using rule 3 (decls)


State 16

    9 type_decls: type_decls type_decl .

    $default  reduce using rule 9 (type_decls)


State 17

   23 func_decl: fn_kwd . ident lparan rparan eq_op expseq
   24          | fn_kwd . ident lparan tyfields rparan eq_op expseq
   25          | fn_kwd . ident lparan rparan colon typeid eq_op expseq
   26          | fn_kwd . ident lparan tyfields rparan colon typeid eq_op expseq

    ident  shift, and go to state 26


State 18

    4 decls: func_decls decls .

    $default  reduce using rule 4 (decls)


State 19

   21 func_decls: func_decls func_decl .

    $default  reduce using rule 21 (func_decls)


State 20

    5 decls: var_decl decls .

    $default  reduce using rule 5 (decls)


State 21

   29 var_decl: var_kwd ident colon . typeid asn_op expv

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 30


State 22

   27 var_decl: var_kwd ident asn_op . expv
   28         | var_kwd ident asn_op . array_defn

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    sqLbrace  shift, and go to state 33
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    array_defn  go to state 37
    expv        go to state 38
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 23

   62 expseq: lparan . rparan
   63       | lparan . explist rparan

    let_kwd     shift, and go to state 1
    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    if_kwd      shift, and go to state 42
    break_kwd   shift, and go to state 43
    while_kwd   shift, and go to state 44
    for_kwd     shift, and go to state 45
    ident       shift, and go to state 46
    lparan      shift, and go to state 32
    rparan      shift, and go to state 47
    minus_op    shift, and go to state 34
    pure_num    shift, and go to state 35
    pure_str    shift, and go to state 36

    let_decl           go to state 48
    typeid             go to state 49
    rec_defn           go to state 50
    expv               go to state 51
    expliteral         go to state 39
    lvalue             go to state 52
    func_call          go to state 53
    asn_exp            go to state 54
    explist            go to state 55
    if_then_decl       go to state 56
    while_decl         go to state 57
    for_decl           go to state 58
    if_then_else_decl  go to state 59


State 24

    2 let_decl: let_kwd decls in_kwd expseq . end_kwd

    end_kwd  shift, and go to state 60


State 25

   11 type_decl: type_kwd ident . eq_op ty_rhs

    eq_op  shift, and go to state 61


State 26

   23 func_decl: fn_kwd ident . lparan rparan eq_op expseq
   24          | fn_kwd ident . lparan tyfields rparan eq_op expseq
   25          | fn_kwd ident . lparan rparan colon typeid eq_op expseq
   26          | fn_kwd ident . lparan tyfields rparan colon typeid eq_op expseq

    lparan  shift, and go to state 62


State 27

   18 typeid: int_kwd .

    $default  reduce using rule 18 (typeid)


State 28

   19 typeid: string_kwd .

    $default  reduce using rule 19 (typeid)


State 29

   20 typeid: ident .

    $default  reduce using rule 20 (typeid)


State 30

   29 var_decl: var_kwd ident colon typeid . asn_op expv

    asn_op  shift, and go to state 63


State 31

   55 lvalue: ident .
   56 func_call: ident . lparan rparan
   57          | ident . lparan parameter_list rparan

    lparan  shift, and go to state 64

    $default  reduce using rule 55 (lvalue)


State 32

   51 expliteral: lparan . expv rparan

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 65
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 33

   33 array_defn: sqLbrace . expv sqRbrace typeid of_kwd expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 66
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 34

   46 expv: minus_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 67
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 35

   48 expliteral: pure_num .

    $default  reduce using rule 48 (expliteral)


State 36

   49 expliteral: pure_str .

    $default  reduce using rule 49 (expliteral)


State 37

   28 var_decl: var_kwd ident asn_op array_defn .

    $default  reduce using rule 28 (var_decl)


State 38

   27 var_decl: var_kwd ident asn_op expv .

    $default  reduce using rule 27 (var_decl)


State 39

   34 expv: expliteral . add_op expv
   35     | expliteral . minus_op expv
   36     | expliteral . mult_op expv
   37     | expliteral . div_op expv
   38     | expliteral . eq_op expv
   39     | expliteral . not_eq expv
   40     | expliteral . gr_op expv
   41     | expliteral . le_op expv
   42     | expliteral . gr_eq_op expv
   43     | expliteral . le_eq_op expv
   44     | expliteral . and_op expv
   45     | expliteral . or_op expv
   47     | expliteral .

    eq_op     shift, and go to state 68
    not_eq    shift, and go to state 69
    gr_op     shift, and go to state 70
    le_op     shift, and go to state 71
    le_eq_op  shift, and go to state 72
    gr_eq_op  shift, and go to state 73
    add_op    shift, and go to state 74
    minus_op  shift, and go to state 75
    mult_op   shift, and go to state 76
    div_op    shift, and go to state 77
    and_op    shift, and go to state 78
    or_op     shift, and go to state 79

    $default  reduce using rule 47 (expv)


State 40

   50 expliteral: lvalue .
   53 lvalue: lvalue . sqLbrace expv sqRbrace
   54       | lvalue . period ident

    sqLbrace  shift, and go to state 80
    period    shift, and go to state 81

    $default  reduce using rule 50 (expliteral)


State 41

   52 expliteral: func_call .

    $default  reduce using rule 52 (expliteral)


State 42

   84 if_then_decl: if_kwd . expv then_kwd expseq
   87 if_then_else_decl: if_kwd . expv then_kwd expseq else_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 82
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 43

   79 explist: break_kwd .

    $default  reduce using rule 79 (explist)


State 44

   85 while_decl: while_kwd . expv do_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 83
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 45

   86 for_decl: for_kwd . ident asn_op expv to_kwd expv do_kwd expseq

    ident  shift, and go to state 84


State 46

   20 typeid: ident .
   55 lvalue: ident .
   56 func_call: ident . lparan rparan
   57          | ident . lparan parameter_list rparan

    lparan  shift, and go to state 64

    lbrace    reduce using rule 20 (typeid)
    $default  reduce using rule 55 (lvalue)


State 47

   62 expseq: lparan rparan .

    $default  reduce using rule 62 (expseq)


State 48

   77 explist: let_decl .

    $default  reduce using rule 77 (explist)


State 49

   30 rec_defn: typeid . lbrace rec_defn_param rbrace

    lbrace  shift, and go to state 85


State 50

   81 explist: rec_defn .

    $default  reduce using rule 81 (explist)


State 51

   83 explist: expv .

    $default  reduce using rule 83 (explist)


State 52

   50 expliteral: lvalue .
   53 lvalue: lvalue . sqLbrace expv sqRbrace
   54       | lvalue . period ident
   60 asn_exp: lvalue . asn_op asn_exp
   61        | lvalue . asn_op expv

    sqLbrace  shift, and go to state 80
    asn_op    shift, and go to state 86
    period    shift, and go to state 81

    $default  reduce using rule 50 (expliteral)


State 53

   52 expliteral: func_call .
   75 explist: func_call .

    rparan     reduce using rule 52 (expliteral)
    rparan     [reduce using rule 75 (explist)]
    semicolon  reduce using rule 52 (expliteral)
    semicolon  [reduce using rule 75 (explist)]
    $default   reduce using rule 52 (expliteral)


State 54

   65 explist: asn_exp .

    $default  reduce using rule 65 (explist)


State 55

   63 expseq: lparan explist . rparan
   64 explist: explist . semicolon asn_exp
   66        | explist . semicolon if_then_decl
   68        | explist . semicolon if_then_else_decl
   70        | explist . semicolon while_decl
   72        | explist . semicolon for_decl
   74        | explist . semicolon func_call
   76        | explist . semicolon let_decl
   78        | explist . semicolon break_kwd
   80        | explist . semicolon rec_defn
   82        | explist . semicolon expv

    rparan     shift, and go to state 87
    semicolon  shift, and go to state 88


State 56

   67 explist: if_then_decl .

    $default  reduce using rule 67 (explist)


State 57

   71 explist: while_decl .

    $default  reduce using rule 71 (explist)


State 58

   73 explist: for_decl .

    $default  reduce using rule 73 (explist)


State 59

   69 explist: if_then_else_decl .

    $default  reduce using rule 69 (explist)


State 60

    2 let_decl: let_kwd decls in_kwd expseq end_kwd .

    $default  reduce using rule 2 (let_decl)


State 61

   11 type_decl: type_kwd ident eq_op . ty_rhs

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    array_kwd   shift, and go to state 89
    ident       shift, and go to state 90
    lbrace      shift, and go to state 91

    ty_rhs  go to state 92
    typeid  go to state 93


State 62

   23 func_decl: fn_kwd ident lparan . rparan eq_op expseq
   24          | fn_kwd ident lparan . tyfields rparan eq_op expseq
   25          | fn_kwd ident lparan . rparan colon typeid eq_op expseq
   26          | fn_kwd ident lparan . tyfields rparan colon typeid eq_op expseq

    ident   shift, and go to state 94
    rparan  shift, and go to state 95

    tyfields  go to state 96


State 63

   29 var_decl: var_kwd ident colon typeid asn_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 97
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 64

   56 func_call: ident lparan . rparan
   57          | ident lparan . parameter_list rparan

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    rparan    shift, and go to state 98
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv            go to state 99
    expliteral      go to state 39
    lvalue          go to state 40
    func_call       go to state 41
    parameter_list  go to state 100


State 65

   51 expliteral: lparan expv . rparan

    rparan  shift, and go to state 101


State 66

   33 array_defn: sqLbrace expv . sqRbrace typeid of_kwd expv

    sqRbrace  shift, and go to state 102


State 67

   46 expv: minus_op expv .

    $default  reduce using rule 46 (expv)


State 68

   38 expv: expliteral eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 103
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 69

   39 expv: expliteral not_eq . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 104
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 70

   40 expv: expliteral gr_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 105
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 71

   41 expv: expliteral le_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 106
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 72

   43 expv: expliteral le_eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 107
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 73

   42 expv: expliteral gr_eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 108
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 74

   34 expv: expliteral add_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 109
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 75

   35 expv: expliteral minus_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 110
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 76

   36 expv: expliteral mult_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 111
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 77

   37 expv: expliteral div_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 112
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 78

   44 expv: expliteral and_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 113
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 79

   45 expv: expliteral or_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 114
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 80

   53 lvalue: lvalue sqLbrace . expv sqRbrace

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 115
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 81

   54 lvalue: lvalue period . ident

    ident  shift, and go to state 116


State 82

   84 if_then_decl: if_kwd expv . then_kwd expseq
   87 if_then_else_decl: if_kwd expv . then_kwd expseq else_kwd expseq

    then_kwd  shift, and go to state 117


State 83

   85 while_decl: while_kwd expv . do_kwd expseq

    do_kwd  shift, and go to state 118


State 84

   86 for_decl: for_kwd ident . asn_op expv to_kwd expv do_kwd expseq

    asn_op  shift, and go to state 119


State 85

   30 rec_defn: typeid lbrace . rec_defn_param rbrace

    ident  shift, and go to state 120

    rec_defn_param  go to state 121


State 86

   60 asn_exp: lvalue asn_op . asn_exp
   61        | lvalue asn_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 122
    expliteral  go to state 39
    lvalue      go to state 52
    func_call   go to state 41
    asn_exp     go to state 123


State 87

   63 expseq: lparan explist rparan .

    $default  reduce using rule 63 (expseq)


State 88

   64 explist: explist semicolon . asn_exp
   66        | explist semicolon . if_then_decl
   68        | explist semicolon . if_then_else_decl
   70        | explist semicolon . while_decl
   72        | explist semicolon . for_decl
   74        | explist semicolon . func_call
   76        | explist semicolon . let_decl
   78        | explist semicolon . break_kwd
   80        | explist semicolon . rec_defn
   82        | explist semicolon . expv

    let_kwd     shift, and go to state 1
    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    if_kwd      shift, and go to state 42
    break_kwd   shift, and go to state 124
    while_kwd   shift, and go to state 44
    for_kwd     shift, and go to state 45
    ident       shift, and go to state 46
    lparan      shift, and go to state 32
    minus_op    shift, and go to state 34
    pure_num    shift, and go to state 35
    pure_str    shift, and go to state 36

    let_decl           go to state 125
    typeid             go to state 49
    rec_defn           go to state 126
    expv               go to state 127
    expliteral         go to state 39
    lvalue             go to state 52
    func_call          go to state 128
    asn_exp            go to state 129
    if_then_decl       go to state 130
    while_decl         go to state 131
    for_decl           go to state 132
    if_then_else_decl  go to state 133


State 89

   13 ty_rhs: array_kwd . of_kwd typeid

    of_kwd  shift, and go to state 134


State 90

   12 ty_rhs: ident .
   20 typeid: ident .

    type_kwd            reduce using rule 12 (ty_rhs)
    type_kwd            [reduce using rule 20 (typeid)]
    var_kwd             reduce using rule 12 (ty_rhs)
    var_kwd             [reduce using rule 20 (typeid)]
    in_kwd              reduce using rule 12 (ty_rhs)
    in_kwd              [reduce using rule 20 (typeid)]
    false_type_kwd      reduce using rule 12 (ty_rhs)
    false_type_kwd      [reduce using rule 20 (typeid)]
    false_function_kwd  reduce using rule 12 (ty_rhs)
    false_function_kwd  [reduce using rule 20 (typeid)]
    $default            reduce using rule 12 (ty_rhs)


State 91

   14 ty_rhs: lbrace . tyfields rbrace

    ident  shift, and go to state 94

    tyfields  go to state 135


State 92

   11 type_decl: type_kwd ident eq_op ty_rhs .

    $default  reduce using rule 11 (type_decl)


State 93

   15 ty_rhs: typeid .

    $default  reduce using rule 15 (ty_rhs)


State 94

   17 tyfields: ident . colon typeid

    colon  shift, and go to state 136


State 95

   23 func_decl: fn_kwd ident lparan rparan . eq_op expseq
   25          | fn_kwd ident lparan rparan . colon typeid eq_op expseq

    eq_op  shift, and go to state 137
    colon  shift, and go to state 138


State 96

   16 tyfields: tyfields . comma ident colon typeid
   24 func_decl: fn_kwd ident lparan tyfields . rparan eq_op expseq
   26          | fn_kwd ident lparan tyfields . rparan colon typeid eq_op expseq

    comma   shift, and go to state 139
    rparan  shift, and go to state 140


State 97

   29 var_decl: var_kwd ident colon typeid asn_op expv .

    $default  reduce using rule 29 (var_decl)


State 98

   56 func_call: ident lparan rparan .

    $default  reduce using rule 56 (func_call)


State 99

   59 parameter_list: expv .

    $default  reduce using rule 59 (parameter_list)


State 100

   57 func_call: ident lparan parameter_list . rparan
   58 parameter_list: parameter_list . comma expv

    comma   shift, and go to state 141
    rparan  shift, and go to state 142


State 101

   51 expliteral: lparan expv rparan .

    $default  reduce using rule 51 (expliteral)


State 102

   33 array_defn: sqLbrace expv sqRbrace . typeid of_kwd expv

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 143


State 103

   38 expv: expliteral eq_op expv .

    $default  reduce using rule 38 (expv)


State 104

   39 expv: expliteral not_eq expv .

    $default  reduce using rule 39 (expv)


State 105

   40 expv: expliteral gr_op expv .

    $default  reduce using rule 40 (expv)


State 106

   41 expv: expliteral le_op expv .

    $default  reduce using rule 41 (expv)


State 107

   43 expv: expliteral le_eq_op expv .

    $default  reduce using rule 43 (expv)


State 108

   42 expv: expliteral gr_eq_op expv .

    $default  reduce using rule 42 (expv)


State 109

   34 expv: expliteral add_op expv .

    $default  reduce using rule 34 (expv)


State 110

   35 expv: expliteral minus_op expv .

    $default  reduce using rule 35 (expv)


State 111

   36 expv: expliteral mult_op expv .

    $default  reduce using rule 36 (expv)


State 112

   37 expv: expliteral div_op expv .

    $default  reduce using rule 37 (expv)


State 113

   44 expv: expliteral and_op expv .

    $default  reduce using rule 44 (expv)


State 114

   45 expv: expliteral or_op expv .

    $default  reduce using rule 45 (expv)


State 115

   53 lvalue: lvalue sqLbrace expv . sqRbrace

    sqRbrace  shift, and go to state 144


State 116

   54 lvalue: lvalue period ident .

    $default  reduce using rule 54 (lvalue)


State 117

   84 if_then_decl: if_kwd expv then_kwd . expseq
   87 if_then_else_decl: if_kwd expv then_kwd . expseq else_kwd expseq

    lparan  shift, and go to state 23

    expseq  go to state 145


State 118

   85 while_decl: while_kwd expv do_kwd . expseq

    lparan  shift, and go to state 23

    expseq  go to state 146


State 119

   86 for_decl: for_kwd ident asn_op . expv to_kwd expv do_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 147
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 120

   32 rec_defn_param: ident . eq_op expv

    eq_op  shift, and go to state 148


State 121

   30 rec_defn: typeid lbrace rec_defn_param . rbrace
   31 rec_defn_param: rec_defn_param . comma ident eq_op expv

    rbrace  shift, and go to state 149
    comma   shift, and go to state 150


State 122

   61 asn_exp: lvalue asn_op expv .

    $default  reduce using rule 61 (asn_exp)


State 123

   60 asn_exp: lvalue asn_op asn_exp .

    $default  reduce using rule 60 (asn_exp)


State 124

   78 explist: explist semicolon break_kwd .

    $default  reduce using rule 78 (explist)


State 125

   76 explist: explist semicolon let_decl .

    $default  reduce using rule 76 (explist)


State 126

   80 explist: explist semicolon rec_defn .

    $default  reduce using rule 80 (explist)


State 127

   82 explist: explist semicolon expv .

    $default  reduce using rule 82 (explist)


State 128

   52 expliteral: func_call .
   74 explist: explist semicolon func_call .

    rparan     reduce using rule 52 (expliteral)
    rparan     [reduce using rule 74 (explist)]
    semicolon  reduce using rule 52 (expliteral)
    semicolon  [reduce using rule 74 (explist)]
    $default   reduce using rule 52 (expliteral)


State 129

   64 explist: explist semicolon asn_exp .

    $default  reduce using rule 64 (explist)


State 130

   66 explist: explist semicolon if_then_decl .

    $default  reduce using rule 66 (explist)


State 131

   70 explist: explist semicolon while_decl .

    $default  reduce using rule 70 (explist)


State 132

   72 explist: explist semicolon for_decl .

    $default  reduce using rule 72 (explist)


State 133

   68 explist: explist semicolon if_then_else_decl .

    $default  reduce using rule 68 (explist)


State 134

   13 ty_rhs: array_kwd of_kwd . typeid

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 151


State 135

   14 ty_rhs: lbrace tyfields . rbrace
   16 tyfields: tyfields . comma ident colon typeid

    rbrace  shift, and go to state 152
    comma   shift, and go to state 139


State 136

   17 tyfields: ident colon . typeid

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 153


State 137

   23 func_decl: fn_kwd ident lparan rparan eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 154


State 138

   25 func_decl: fn_kwd ident lparan rparan colon . typeid eq_op expseq

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 155


State 139

   16 tyfields: tyfields comma . ident colon typeid

    ident  shift, and go to state 156


State 140

   24 func_decl: fn_kwd ident lparan tyfields rparan . eq_op expseq
   26          | fn_kwd ident lparan tyfields rparan . colon typeid eq_op expseq

    eq_op  shift, and go to state 157
    colon  shift, and go to state 158


State 141

   58 parameter_list: parameter_list comma . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 159
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 142

   57 func_call: ident lparan parameter_list rparan .

    $default  reduce using rule 57 (func_call)


State 143

   33 array_defn: sqLbrace expv sqRbrace typeid . of_kwd expv

    of_kwd  shift, and go to state 160


State 144

   53 lvalue: lvalue sqLbrace expv sqRbrace .

    $default  reduce using rule 53 (lvalue)


State 145

   84 if_then_decl: if_kwd expv then_kwd expseq .
   87 if_then_else_decl: if_kwd expv then_kwd expseq . else_kwd expseq

    else_kwd  shift, and go to state 161

    $default  reduce using rule 84 (if_then_decl)


State 146

   85 while_decl: while_kwd expv do_kwd expseq .

    $default  reduce using rule 85 (while_decl)


State 147

   86 for_decl: for_kwd ident asn_op expv . to_kwd expv do_kwd expseq

    to_kwd  shift, and go to state 162


State 148

   32 rec_defn_param: ident eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 163
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 149

   30 rec_defn: typeid lbrace rec_defn_param rbrace .

    $default  reduce using rule 30 (rec_defn)


State 150

   31 rec_defn_param: rec_defn_param comma . ident eq_op expv

    ident  shift, and go to state 164


State 151

   13 ty_rhs: array_kwd of_kwd typeid .

    $default  reduce using rule 13 (ty_rhs)


State 152

   14 ty_rhs: lbrace tyfields rbrace .

    $default  reduce using rule 14 (ty_rhs)


State 153

   17 tyfields: ident colon typeid .

    $default  reduce using rule 17 (tyfields)


State 154

   23 func_decl: fn_kwd ident lparan rparan eq_op expseq .

    $default  reduce using rule 23 (func_decl)


State 155

   25 func_decl: fn_kwd ident lparan rparan colon typeid . eq_op expseq

    eq_op  shift, and go to state 165


State 156

   16 tyfields: tyfields comma ident . colon typeid

    colon  shift, and go to state 166


State 157

   24 func_decl: fn_kwd ident lparan tyfields rparan eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 167


State 158

   26 func_decl: fn_kwd ident lparan tyfields rparan colon . typeid eq_op expseq

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 168


State 159

   58 parameter_list: parameter_list comma expv .

    $default  reduce using rule 58 (parameter_list)


State 160

   33 array_defn: sqLbrace expv sqRbrace typeid of_kwd . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 169
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 161

   87 if_then_else_decl: if_kwd expv then_kwd expseq else_kwd . expseq

    lparan  shift, and go to state 23

    expseq  go to state 170


State 162

   86 for_decl: for_kwd ident asn_op expv to_kwd . expv do_kwd expseq

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 171
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 163

   32 rec_defn_param: ident eq_op expv .

    $default  reduce using rule 32 (rec_defn_param)


State 164

   31 rec_defn_param: rec_defn_param comma ident . eq_op expv

    eq_op  shift, and go to state 172


State 165

   25 func_decl: fn_kwd ident lparan rparan colon typeid eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 173


State 166

   16 tyfields: tyfields comma ident colon . typeid

    int_kwd     shift, and go to state 27
    string_kwd  shift, and go to state 28
    ident       shift, and go to state 29

    typeid  go to state 174


State 167

   24 func_decl: fn_kwd ident lparan tyfields rparan eq_op expseq .

    $default  reduce using rule 24 (func_decl)


State 168

   26 func_decl: fn_kwd ident lparan tyfields rparan colon typeid . eq_op expseq

    eq_op  shift, and go to state 175


State 169

   33 array_defn: sqLbrace expv sqRbrace typeid of_kwd expv .

    $default  reduce using rule 33 (array_defn)


State 170

   87 if_then_else_decl: if_kwd expv then_kwd expseq else_kwd expseq .

    $default  reduce using rule 87 (if_then_else_decl)


State 171

   86 for_decl: for_kwd ident asn_op expv to_kwd expv . do_kwd expseq

    do_kwd  shift, and go to state 176


State 172

   31 rec_defn_param: rec_defn_param comma ident eq_op . expv

    ident     shift, and go to state 31
    lparan    shift, and go to state 32
    minus_op  shift, and go to state 34
    pure_num  shift, and go to state 35
    pure_str  shift, and go to state 36

    expv        go to state 177
    expliteral  go to state 39
    lvalue      go to state 40
    func_call   go to state 41


State 173

   25 func_decl: fn_kwd ident lparan rparan colon typeid eq_op expseq .

    $default  reduce using rule 25 (func_decl)


State 174

   16 tyfields: tyfields comma ident colon typeid .

    $default  reduce using rule 16 (tyfields)


State 175

   26 func_decl: fn_kwd ident lparan tyfields rparan colon typeid eq_op . expseq

    lparan  shift, and go to state 23

    expseq  go to state 178


State 176

   86 for_decl: for_kwd ident asn_op expv to_kwd expv do_kwd . expseq

    lparan  shift, and go to state 23

    expseq  go to state 179


State 177

   31 rec_defn_param: rec_defn_param comma ident eq_op expv .

    $default  reduce using rule 31 (rec_defn_param)


State 178

   26 func_decl: fn_kwd ident lparan tyfields rparan colon typeid eq_op expseq .

    $default  reduce using rule 26 (func_decl)


State 179

   86 for_decl: for_kwd ident asn_op expv to_kwd expv do_kwd expseq .

    $default  reduce using rule 86 (for_decl)
